import {
  createStyled,
  driver,
  getInitialStyle,
  useStyletron,
  withStyle,
  withWrapper
} from "./chunk-YAYWVDKE.js";
import {
  require_react_is
} from "./chunk-DHORR3Q4.js";
import {
  require_react
} from "./chunk-HUL2CLQT.js";
import {
  __commonJS,
  __toESM
} from "./chunk-EWTE5DHJ.js";

// node_modules/just-extend/index.js
var require_just_extend = __commonJS({
  "node_modules/just-extend/index.js"(exports, module) {
    module.exports = extend2;
    function extend2() {
      var args = [].slice.call(arguments);
      var deep = false;
      if (typeof args[0] == "boolean") {
        deep = args.shift();
      }
      var result = args[0];
      if (isUnextendable(result)) {
        throw new Error("extendee must be an object");
      }
      var extenders = args.slice(1);
      var len = extenders.length;
      for (var i = 0; i < len; i++) {
        var extender = extenders[i];
        for (var key in extender) {
          if (Object.prototype.hasOwnProperty.call(extender, key)) {
            var value = extender[key];
            if (deep && isCloneable2(value)) {
              var base = Array.isArray(value) ? [] : {};
              result[key] = extend2(
                true,
                Object.prototype.hasOwnProperty.call(result, key) && !isUnextendable(result[key]) ? result[key] : base,
                value
              );
            } else {
              result[key] = value;
            }
          }
        }
      }
      return result;
    }
    function isCloneable2(obj) {
      return Array.isArray(obj) || {}.toString.call(obj) == "[object Object]";
    }
    function isUnextendable(val) {
      return !val || typeof val != "object" && typeof val != "function";
    }
  }
});

// node_modules/baseui/esm/helpers/overrides.js
var React = __toESM(require_react());
var import_react_is = __toESM(require_react_is());

// node_modules/baseui/esm/utils/deep-merge.js
function _typeof(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof3(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof = function _typeof3(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof(obj);
}
function deepMerge(target) {
  target = target || {};
  var len = arguments.length <= 1 ? 0 : arguments.length - 1;
  var obj;
  var value;
  for (var i = 0; i < len; i++) {
    obj = (i + 1 < 1 || arguments.length <= i + 1 ? void 0 : arguments[i + 1]) || {};
    for (var key in obj) {
      if (_typeof(obj[key]) !== void 0) {
        value = obj[key];
        if (isCloneable(value)) {
          target[key] = deepMerge(
            /* eslint-disable-next-line no-mixed-operators */
            target[key] || Array.isArray(value) && [] || {},
            value
          );
        } else {
          target[key] = value;
        }
      }
    }
  }
  return target;
}
function isCloneable(obj) {
  return Array.isArray(obj) || {}.toString.call(obj) == "[object Object]";
}

// node_modules/baseui/esm/helpers/overrides.js
function _extends() {
  _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _typeof2(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof2 = function _typeof3(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof2 = function _typeof3(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof2(obj);
}
function getOverride(override) {
  if ((0, import_react_is.isValidElementType)(override)) {
    return override;
  }
  if (override && _typeof2(override) === "object") {
    return override.component;
  }
  return override;
}
function getOverrideProps(override) {
  if (override && _typeof2(override) === "object") {
    if (_typeof2(override.props) === "object") {
      return _objectSpread(_objectSpread({}, override.props), {}, {
        $style: override.style
      });
    } else {
      return {
        $style: override.style
      };
    }
  }
  return {};
}
function toObjectOverride(override) {
  if ((0, import_react_is.isValidElementType)(override)) {
    return {
      // flowlint-next-line unclear-type:off
      component: override
    };
  }
  return override || {};
}
function getOverrides(override, defaultComponent) {
  var Component = getOverride(override) || defaultComponent;
  if (override && _typeof2(override) === "object" && typeof override.props === "function") {
    if (true) {
      console.warn("baseui:Overrides Props as a function will be removed in the next major version. Override the whole component instead. See https://baseweb.design/guides/understanding-overrides/#override-the-entire-subcomponent");
    }
    var DynamicOverride = React.forwardRef(function(props2, ref) {
      var mappedProps = override.props(props2);
      var nextProps = getOverrideProps(_objectSpread(_objectSpread({}, override), {}, {
        props: mappedProps
      }));
      return React.createElement(Component, _extends({
        ref
      }, nextProps));
    });
    DynamicOverride.displayName = Component.displayName;
    return [DynamicOverride, {}];
  }
  var props = getOverrideProps(override);
  return [Component, props];
}
function mergeOverrides() {
  var target = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var source = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var merged = Object.assign({}, target, source);
  var allIdentifiers = Object.keys(merged);
  return allIdentifiers.reduce(function(acc, name) {
    acc[name] = mergeOverride(toObjectOverride(target[name]), toObjectOverride(source[name]));
    return acc;
  }, {});
}
function mergeOverride(target, source) {
  var merged = _objectSpread(_objectSpread({}, target), source);
  if (target.props && source.props) {
    merged.props = mergeConfigurationOverrides(target.props, source.props);
  }
  if (target.style && source.style) {
    merged.style = mergeConfigurationOverrides(target.style, source.style);
  }
  return merged;
}
function mergeConfigurationOverrides(target, source) {
  if (_typeof2(target) === "object" && _typeof2(source) === "object") {
    return deepMerge({}, target, source);
  }
  return function() {
    return deepMerge({}, typeof target === "function" ? target.apply(void 0, arguments) : target, typeof source === "function" ? source.apply(void 0, arguments) : source);
  };
}

// node_modules/baseui/esm/tokens/colors.js
var colors = {
  white: "#FFFFFF",
  gray50: "#F6F6F6",
  gray100: "#EEEEEE",
  gray200: "#E2E2E2",
  gray300: "#CBCBCB",
  gray400: "#AFAFAF",
  gray500: "#6B6B6B",
  gray600: "#545454",
  gray700: "#333333",
  gray800: "#1F1F1F",
  gray900: "#141414",
  black: "#000000",
  platinum50: "#F4FAFB",
  platinum100: "#EBF5F7",
  platinum200: "#CCDFE5",
  platinum300: "#A1BDCA",
  platinum400: "#8EA3AD",
  platinum500: "#6C7C83",
  platinum600: "#556268",
  platinum700: "#394145",
  platinum800: "#142328",
  red50: "#FFEFED",
  red100: "#FED7D2",
  red200: "#F1998E",
  red300: "#E85C4A",
  red400: "#E11900",
  red500: "#AB1300",
  red600: "#870F00",
  red700: "#5A0A00",
  orange50: "#FFF3EF",
  orange100: "#FFE1D6",
  orange200: "#FABDA5",
  orange300: "#FA9269",
  orange400: "#FF6937",
  orange500: "#C14F29",
  orange600: "#9A3F21",
  orange700: "#672A16",
  yellow50: "#FFFAF0",
  yellow100: "#FFF2D9",
  yellow200: "#FFE3AC",
  yellow300: "#FFCF70",
  yellow400: "#FFC043",
  yellow500: "#BC8B2C",
  yellow600: "#996F00",
  yellow700: "#674D1B",
  green50: "#E6F2ED",
  green100: "#ADDEC9",
  green200: "#66D19E",
  green300: "#06C167",
  green400: "#048848",
  green500: "#03703C",
  green600: "#03582F",
  green700: "#10462D",
  blue50: "#EFF3FE",
  blue100: "#D4E2FC",
  blue200: "#A0BFF8",
  blue300: "#5B91F5",
  blue400: "#276EF1",
  blue500: "#1E54B7",
  blue600: "#174291",
  blue700: "#102C60",
  cobalt50: "#EBEDFA",
  cobalt100: "#D2D7F0",
  cobalt200: "#949CE3",
  cobalt300: "#535FCF",
  cobalt400: "#0E1FC1",
  cobalt500: "#0A1899",
  cobalt600: "#081270",
  cobalt700: "#050C4D",
  purple50: "#F3F1F9",
  purple100: "#E3DDF2",
  purple200: "#C1B4E2",
  purple300: "#957FCE",
  purple400: "#7356BF",
  purple500: "#574191",
  purple600: "#453473",
  purple700: "#2E224C",
  brown50: "#F6F0EA",
  brown100: "#EBE0DB",
  brown200: "#D2BBB0",
  brown300: "#B18977",
  brown400: "#99644C",
  brown500: "#744C3A",
  brown600: "#5C3C2E",
  brown700: "#3D281E"
};
var colors_default = colors;

// node_modules/baseui/esm/themes/light-theme/color-tokens.js
var lightColorTokens = {
  // Primary Palette
  primaryA: colors_default.black,
  primaryB: colors_default.white,
  primary: colors_default.black,
  primary50: colors_default.gray50,
  primary100: colors_default.gray100,
  primary200: colors_default.gray200,
  primary300: colors_default.gray300,
  primary400: colors_default.gray400,
  primary500: colors_default.gray500,
  primary600: colors_default.gray600,
  primary700: colors_default.gray700,
  // Accent Palette
  accent: colors_default.blue400,
  accent50: colors_default.blue50,
  accent100: colors_default.blue100,
  accent200: colors_default.blue200,
  accent300: colors_default.blue300,
  accent400: colors_default.blue400,
  accent500: colors_default.blue500,
  accent600: colors_default.blue600,
  accent700: colors_default.blue700,
  // Negative Palette
  negative: colors_default.red400,
  negative50: colors_default.red50,
  negative100: colors_default.red100,
  negative200: colors_default.red200,
  negative300: colors_default.red300,
  negative400: colors_default.red400,
  negative500: colors_default.red500,
  negative600: colors_default.red600,
  negative700: colors_default.red700,
  // Warning Palette
  warning: colors_default.yellow400,
  warning50: colors_default.yellow50,
  warning100: colors_default.yellow100,
  warning200: colors_default.yellow200,
  warning300: colors_default.yellow300,
  warning400: colors_default.yellow400,
  warning500: colors_default.yellow500,
  warning600: colors_default.yellow600,
  warning700: colors_default.yellow700,
  // Positive Palette
  positive: colors_default.green500,
  positive50: colors_default.green50,
  positive100: colors_default.green100,
  positive200: colors_default.green200,
  positive300: colors_default.green300,
  positive400: colors_default.green400,
  positive500: colors_default.green500,
  positive600: colors_default.green600,
  positive700: colors_default.green700,
  // Monochrome Palette
  white: colors_default.white,
  black: colors_default.black,
  mono100: colors_default.white,
  mono200: colors_default.gray50,
  mono300: colors_default.gray100,
  mono400: colors_default.gray200,
  mono500: colors_default.gray300,
  mono600: colors_default.gray400,
  mono700: colors_default.gray500,
  mono800: colors_default.gray600,
  mono900: colors_default.gray700,
  mono1000: colors_default.black,
  // Rating Palette,
  rating200: colors_default.yellow200,
  rating400: colors_default.yellow400,
  ratingInactiveFill: colors_default.gray100,
  ratingStroke: colors_default.gray300
};
var color_tokens_default = lightColorTokens;

// node_modules/baseui/esm/styles/util.js
function hexToRgb() {
  var hex = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
  var alpha = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "1";
  var shorthandRegex = /^#?([a-f\d])([a-f\d])([a-f\d])$/i;
  hex = hex.replace(shorthandRegex, function(m, r, g, b) {
    return r + r + g + g + b + b;
  });
  var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
  return result ? "rgba(".concat(parseInt(result[1], 16), ", ").concat(parseInt(result[2], 16), ", ").concat(parseInt(result[3], 16), ", ").concat(alpha, ")") : null;
}

// node_modules/baseui/esm/themes/light-theme/color-semantic-tokens.js
function ownKeys2(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys2(Object(source), true).forEach(function(key) {
        _defineProperty2(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys2(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty2(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
var color_semantic_tokens_default = function() {
  var foundation = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : color_tokens_default;
  var core = {
    // Background
    backgroundPrimary: foundation.primaryB,
    backgroundSecondary: colors_default.gray50,
    backgroundTertiary: colors_default.gray100,
    backgroundInversePrimary: foundation.primaryA,
    backgroundInverseSecondary: colors_default.gray800,
    // Content
    contentPrimary: foundation.primaryA,
    contentSecondary: colors_default.gray600,
    contentTertiary: colors_default.gray500,
    contentInversePrimary: foundation.primaryB,
    contentInverseSecondary: colors_default.gray300,
    contentInverseTertiary: colors_default.gray400,
    // Border
    borderOpaque: colors_default.gray200,
    borderTransparent: hexToRgb(foundation.primaryA, "0.08"),
    borderSelected: foundation.primaryA,
    borderInverseOpaque: colors_default.gray700,
    borderInverseTransparent: hexToRgb(foundation.primaryB, "0.2"),
    borderInverseSelected: foundation.primaryB
  };
  var coreExtensions = {
    // Backgrounds
    backgroundStateDisabled: colors_default.gray50,
    backgroundOverlayDark: hexToRgb(colors_default.black, "0.3"),
    backgroundOverlayLight: hexToRgb(colors_default.black, "0.08"),
    backgroundAccent: foundation.accent,
    backgroundNegative: foundation.negative,
    backgroundWarning: foundation.warning,
    backgroundPositive: colors_default.green400,
    backgroundLightAccent: colors_default.blue50,
    backgroundLightNegative: colors_default.red50,
    backgroundLightWarning: colors_default.yellow50,
    backgroundLightPositive: colors_default.green50,
    backgroundAlwaysDark: colors_default.black,
    backgroundAlwaysLight: colors_default.white,
    // Content
    contentStateDisabled: colors_default.gray400,
    contentAccent: foundation.accent,
    contentOnColor: colors_default.white,
    contentOnColorInverse: colors_default.black,
    contentNegative: foundation.negative,
    contentWarning: colors_default.yellow600,
    contentPositive: colors_default.green400,
    // Border
    borderStateDisabled: colors_default.gray50,
    borderAccent: colors_default.blue400,
    borderAccentLight: colors_default.blue200,
    borderNegative: colors_default.red200,
    borderWarning: colors_default.yellow200,
    borderPositive: colors_default.green200,
    // Programs
    safety: colors_default.blue400,
    eatsGreen400: colors_default.green400,
    freightBlue400: colors_default.cobalt400,
    jumpRed400: colors_default.red400,
    rewardsTier1: colors_default.blue400,
    rewardsTier2: colors_default.yellow400,
    rewardsTier3: colors_default.platinum400,
    rewardsTier4: colors_default.black,
    membership: colors_default.yellow600
  };
  return _objectSpread2(_objectSpread2({}, core), coreExtensions);
};

// node_modules/baseui/esm/themes/light-theme/color-component-tokens.js
var tagHoverBackground = "rgba(0, 0, 0, 0.08)";
var color_component_tokens_default = function() {
  var themePrimitives = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : color_tokens_default;
  return {
    // Buttons
    buttonPrimaryFill: themePrimitives.primary,
    buttonPrimaryText: themePrimitives.white,
    buttonPrimaryHover: themePrimitives.primary700,
    buttonPrimaryActive: themePrimitives.primary600,
    buttonPrimarySelectedFill: themePrimitives.primary600,
    buttonPrimarySelectedText: themePrimitives.white,
    buttonPrimarySpinnerForeground: themePrimitives.accent,
    buttonPrimarySpinnerBackground: themePrimitives.primaryB,
    buttonSecondaryFill: themePrimitives.primary100,
    buttonSecondaryText: themePrimitives.primary,
    buttonSecondaryHover: themePrimitives.primary200,
    buttonSecondaryActive: themePrimitives.primary300,
    buttonSecondarySelectedFill: themePrimitives.primary300,
    buttonSecondarySelectedText: themePrimitives.primary,
    buttonSecondarySpinnerForeground: themePrimitives.accent,
    buttonSecondarySpinnerBackground: themePrimitives.primaryB,
    buttonTertiaryFill: "transparent",
    buttonTertiaryText: themePrimitives.primary,
    buttonTertiaryHover: themePrimitives.primary50,
    buttonTertiaryActive: themePrimitives.primary100,
    buttonTertiarySelectedFill: themePrimitives.primary100,
    buttonTertiarySelectedText: themePrimitives.primary,
    buttonTertiaryDisabledActiveFill: themePrimitives.primary50,
    buttonTertiaryDisabledActiveText: themePrimitives.mono600,
    buttonTertiarySpinnerForeground: themePrimitives.accent,
    buttonTertiarySpinnerBackground: themePrimitives.primary100,
    buttonMinimalFill: "transparent",
    buttonMinimalText: themePrimitives.primary,
    buttonMinimalHover: themePrimitives.primary50,
    buttonMinimalActive: themePrimitives.primary100,
    buttonMinimalSelectedFill: themePrimitives.primary100,
    buttonMinimalSelectedText: themePrimitives.primary,
    buttonMinimalSpinnerForeground: themePrimitives.accent,
    buttonMinimalSpinnerBackground: themePrimitives.primary100,
    buttonDisabledFill: themePrimitives.mono200,
    buttonDisabledText: themePrimitives.mono600,
    buttonDisabledActiveFill: themePrimitives.mono700,
    buttonDisabledActiveText: themePrimitives.mono100,
    buttonDisabledSpinnerForeground: themePrimitives.mono600,
    buttonDisabledSpinnerBackground: themePrimitives.mono400,
    // Breadcrumbs
    breadcrumbsText: themePrimitives.mono900,
    breadcrumbsSeparatorFill: themePrimitives.mono700,
    // Datepicker
    datepickerBackground: themePrimitives.mono100,
    datepickerDayFont: themePrimitives.mono1000,
    datepickerDayFontDisabled: themePrimitives.mono500,
    datepickerDayPseudoSelected: themePrimitives.primary100,
    datepickerDayPseudoHighlighted: themePrimitives.primary200,
    // Calendar
    calendarBackground: themePrimitives.mono100,
    calendarForeground: themePrimitives.mono1000,
    calendarForegroundDisabled: themePrimitives.mono500,
    calendarHeaderBackground: themePrimitives.white,
    calendarHeaderForeground: themePrimitives.primary,
    calendarHeaderBackgroundActive: themePrimitives.primary700,
    calendarHeaderForegroundDisabled: themePrimitives.primary500,
    calendarDayBackgroundPseudoSelected: themePrimitives.primary100,
    calendarDayForegroundPseudoSelected: themePrimitives.mono1000,
    calendarDayBackgroundPseudoSelectedHighlighted: themePrimitives.primary200,
    calendarDayForegroundPseudoSelectedHighlighted: themePrimitives.mono1000,
    calendarDayBackgroundSelected: themePrimitives.primary,
    calendarDayForegroundSelected: themePrimitives.white,
    calendarDayBackgroundSelectedHighlighted: themePrimitives.primary,
    calendarDayForegroundSelectedHighlighted: themePrimitives.white,
    // Combobox
    comboboxListItemFocus: themePrimitives.mono200,
    comboboxListItemHover: themePrimitives.mono300,
    // FileUploader
    fileUploaderBackgroundColor: themePrimitives.mono200,
    fileUploaderBackgroundColorActive: themePrimitives.primary50,
    fileUploaderBorderColorActive: themePrimitives.primary,
    fileUploaderBorderColorDefault: themePrimitives.mono500,
    fileUploaderMessageColor: themePrimitives.mono800,
    // Links
    linkText: themePrimitives.primary,
    linkVisited: themePrimitives.primary700,
    linkHover: themePrimitives.primary600,
    linkActive: themePrimitives.primary500,
    // List
    listHeaderFill: themePrimitives.white,
    listBodyFill: themePrimitives.white,
    listIconFill: themePrimitives.mono500,
    listBorder: themePrimitives.mono500,
    // ProgressSteps
    progressStepsCompletedText: themePrimitives.white,
    progressStepsCompletedFill: themePrimitives.primary,
    progressStepsActiveText: themePrimitives.white,
    progressStepsActiveFill: themePrimitives.primary,
    progressStepsIconActiveFill: themePrimitives.primary,
    // Toggle
    toggleFill: themePrimitives.white,
    toggleFillChecked: themePrimitives.primary,
    toggleFillDisabled: themePrimitives.mono600,
    toggleTrackFill: themePrimitives.mono400,
    toggleTrackFillDisabled: themePrimitives.mono300,
    // Tick
    tickFill: themePrimitives.mono100,
    tickFillHover: themePrimitives.mono200,
    tickFillActive: themePrimitives.mono300,
    tickFillSelected: themePrimitives.primary,
    tickFillSelectedHover: themePrimitives.primary700,
    tickFillSelectedHoverActive: themePrimitives.primary600,
    tickFillError: themePrimitives.negative50,
    tickFillErrorHover: themePrimitives.negative100,
    tickFillErrorHoverActive: themePrimitives.negative200,
    tickFillErrorSelected: themePrimitives.negative400,
    tickFillErrorSelectedHover: themePrimitives.negative500,
    tickFillErrorSelectedHoverActive: themePrimitives.negative600,
    tickFillDisabled: themePrimitives.mono600,
    tickBorder: themePrimitives.mono700,
    tickBorderError: themePrimitives.negative400,
    tickMarkFill: themePrimitives.white,
    tickMarkFillError: themePrimitives.white,
    tickMarkFillDisabled: themePrimitives.mono100,
    // Slider/Toggle
    sliderTrackFill: "transparent",
    sliderHandleFill: themePrimitives.primaryA,
    sliderHandleFillDisabled: themePrimitives.primary400,
    sliderHandleInnerFill: themePrimitives.primaryA,
    sliderTrackFillHover: themePrimitives.mono500,
    sliderTrackFillActive: themePrimitives.mono600,
    sliderTrackFillSelected: themePrimitives.primary,
    sliderTrackFillSelectedHover: themePrimitives.primary,
    sliderTrackFillSelectedActive: themePrimitives.primary500,
    sliderTrackFillDisabled: themePrimitives.mono300,
    sliderHandleFillHover: themePrimitives.white,
    sliderHandleFillActive: themePrimitives.white,
    sliderHandleFillSelected: themePrimitives.white,
    sliderHandleFillSelectedHover: themePrimitives.white,
    sliderHandleFillSelectedActive: themePrimitives.white,
    sliderHandleInnerFillDisabled: themePrimitives.mono400,
    sliderHandleInnerFillSelectedHover: themePrimitives.primary,
    sliderHandleInnerFillSelectedActive: themePrimitives.primary500,
    sliderBorder: themePrimitives.mono500,
    sliderBorderHover: themePrimitives.primary,
    sliderBorderDisabled: themePrimitives.mono600,
    // Inputs
    inputBorder: themePrimitives.mono300,
    inputFill: themePrimitives.mono300,
    inputFillError: themePrimitives.negative50,
    inputFillDisabled: themePrimitives.mono200,
    inputFillActive: themePrimitives.mono200,
    inputFillPositive: themePrimitives.positive50,
    inputTextDisabled: themePrimitives.mono600,
    inputBorderError: themePrimitives.negative200,
    inputBorderPositive: themePrimitives.positive200,
    inputEnhancerFill: themePrimitives.mono300,
    inputEnhancerFillDisabled: themePrimitives.mono300,
    inputEnhancerTextDisabled: themePrimitives.mono600,
    inputPlaceholder: themePrimitives.mono700,
    inputPlaceholderDisabled: themePrimitives.mono600,
    // Menu
    menuFill: themePrimitives.mono100,
    menuFillHover: themePrimitives.mono200,
    menuFontDefault: themePrimitives.mono800,
    menuFontDisabled: themePrimitives.mono500,
    menuFontHighlighted: themePrimitives.mono1000,
    menuFontSelected: themePrimitives.mono1000,
    // Modal
    modalCloseColor: themePrimitives.mono1000,
    modalCloseColorHover: themePrimitives.mono800,
    modalCloseColorFocus: themePrimitives.mono800,
    // Pagination
    paginationTriangleDown: themePrimitives.mono800,
    // Header navigation
    headerNavigationFill: "transparent",
    // Tab
    tabBarFill: themePrimitives.mono200,
    tabColor: themePrimitives.mono800,
    // Notification
    notificationPrimaryBackground: themePrimitives.primary50,
    notificationPrimaryText: themePrimitives.primaryA,
    notificationInfoBackground: themePrimitives.accent50,
    notificationInfoText: themePrimitives.primaryA,
    notificationPositiveBackground: themePrimitives.positive50,
    notificationPositiveText: themePrimitives.primaryA,
    notificationWarningBackground: themePrimitives.warning50,
    notificationWarningText: themePrimitives.primaryA,
    notificationNegativeBackground: themePrimitives.negative50,
    notificationNegativeText: themePrimitives.primaryA,
    // Tag
    // Custom ramps
    tagFontDisabledRampUnit: "100",
    tagOutlinedDisabledRampUnit: "200",
    tagSolidFontRampUnit: "0",
    tagSolidRampUnit: "400",
    tagOutlinedFontRampUnit: "400",
    tagOutlinedRampUnit: "200",
    // Deprecated
    tagSolidHoverRampUnit: "50",
    tagSolidActiveRampUnit: "100",
    tagSolidDisabledRampUnit: "50",
    tagSolidFontHoverRampUnit: "500",
    tagLightRampUnit: "50",
    tagLightHoverRampUnit: "100",
    tagLightActiveRampUnit: "100",
    tagLightDisabledRampUnit: "50",
    tagLightFontRampUnit: "500",
    tagLightFontHoverRampUnit: "500",
    tagOutlinedHoverRampUnit: "50",
    tagOutlinedActiveRampUnit: "0",
    tagOutlinedFontHoverRampUnit: "400",
    // Neutral
    tagNeutralFontDisabled: themePrimitives.mono600,
    tagNeutralOutlinedDisabled: themePrimitives.mono400,
    tagNeutralSolidFont: themePrimitives.white,
    tagNeutralSolidBackground: themePrimitives.black,
    tagNeutralOutlinedBackground: themePrimitives.mono600,
    tagNeutralOutlinedFont: themePrimitives.black,
    // Deprecated
    tagNeutralSolidHover: themePrimitives.mono300,
    tagNeutralSolidActive: themePrimitives.mono400,
    tagNeutralSolidDisabled: themePrimitives.mono200,
    tagNeutralSolidFontHover: themePrimitives.mono900,
    tagNeutralLightBackground: themePrimitives.mono300,
    tagNeutralLightHover: themePrimitives.mono300,
    tagNeutralLightActive: themePrimitives.mono400,
    tagNeutralLightDisabled: themePrimitives.mono200,
    tagNeutralLightFont: themePrimitives.mono900,
    tagNeutralLightFontHover: themePrimitives.mono900,
    tagNeutralOutlinedActive: themePrimitives.mono900,
    tagNeutralOutlinedFontHover: themePrimitives.mono800,
    tagNeutralOutlinedHover: tagHoverBackground,
    // Primary
    tagPrimaryFontDisabled: themePrimitives.primary400,
    tagPrimaryOutlinedDisabled: themePrimitives.primary200,
    tagPrimarySolidFont: themePrimitives.white,
    tagPrimarySolidBackground: themePrimitives.primary,
    tagPrimaryOutlinedFontHover: themePrimitives.primary,
    tagPrimaryOutlinedFont: themePrimitives.primary,
    // Deprecated
    tagPrimarySolidHover: themePrimitives.primary100,
    tagPrimarySolidActive: themePrimitives.primary200,
    tagPrimarySolidDisabled: themePrimitives.primary50,
    tagPrimarySolidFontHover: themePrimitives.primary700,
    tagPrimaryLightBackground: themePrimitives.primary50,
    tagPrimaryLightHover: themePrimitives.primary100,
    tagPrimaryLightActive: themePrimitives.primary100,
    tagPrimaryLightDisabled: themePrimitives.primary50,
    tagPrimaryLightFont: themePrimitives.primary500,
    tagPrimaryLightFontHover: themePrimitives.primary500,
    tagPrimaryOutlinedActive: themePrimitives.primary600,
    tagPrimaryOutlinedHover: tagHoverBackground,
    tagPrimaryOutlinedBackground: themePrimitives.primary400,
    // Accent
    tagAccentFontDisabled: themePrimitives.accent200,
    tagAccentOutlinedDisabled: themePrimitives.accent200,
    tagAccentSolidFont: themePrimitives.white,
    tagAccentSolidBackground: themePrimitives.accent400,
    tagAccentOutlinedBackground: themePrimitives.accent200,
    tagAccentOutlinedFont: themePrimitives.accent400,
    // Deprecated
    tagAccentSolidHover: themePrimitives.accent50,
    tagAccentSolidActive: themePrimitives.accent100,
    tagAccentSolidDisabled: themePrimitives.accent50,
    tagAccentSolidFontHover: themePrimitives.accent500,
    tagAccentLightBackground: themePrimitives.accent50,
    tagAccentLightHover: themePrimitives.accent100,
    tagAccentLightActive: themePrimitives.accent100,
    tagAccentLightDisabled: themePrimitives.accent50,
    tagAccentLightFont: themePrimitives.accent500,
    tagAccentLightFontHover: themePrimitives.accent500,
    tagAccentOutlinedActive: themePrimitives.accent600,
    tagAccentOutlinedFontHover: themePrimitives.accent400,
    tagAccentOutlinedHover: tagHoverBackground,
    // Positive
    tagPositiveFontDisabled: themePrimitives.positive200,
    tagPositiveOutlinedDisabled: themePrimitives.positive200,
    tagPositiveSolidFont: themePrimitives.white,
    tagPositiveSolidBackground: themePrimitives.positive400,
    tagPositiveOutlinedBackground: themePrimitives.positive200,
    tagPositiveOutlinedFont: themePrimitives.positive400,
    // Deprecated
    tagPositiveSolidHover: themePrimitives.positive50,
    tagPositiveSolidActive: themePrimitives.positive100,
    tagPositiveSolidDisabled: themePrimitives.positive50,
    tagPositiveSolidFontHover: themePrimitives.positive500,
    tagPositiveLightBackground: themePrimitives.positive50,
    tagPositiveLightHover: themePrimitives.positive100,
    tagPositiveLightActive: themePrimitives.positive100,
    tagPositiveLightDisabled: themePrimitives.positive50,
    tagPositiveLightFont: themePrimitives.positive500,
    tagPositiveLightFontHover: themePrimitives.positive500,
    tagPositiveOutlinedActive: themePrimitives.positive600,
    tagPositiveOutlinedFontHover: themePrimitives.positive400,
    tagPositiveOutlinedHover: tagHoverBackground,
    // Warning
    tagWarningFontDisabled: themePrimitives.warning300,
    tagWarningOutlinedDisabled: themePrimitives.warning300,
    tagWarningSolidFont: themePrimitives.warning700,
    tagWarningSolidBackground: themePrimitives.warning400,
    tagWarningOutlinedBackground: themePrimitives.warning300,
    tagWarningOutlinedFont: themePrimitives.warning600,
    // Deprecated
    tagWarningSolidHover: themePrimitives.warning50,
    tagWarningSolidActive: themePrimitives.warning100,
    tagWarningSolidDisabled: themePrimitives.warning50,
    tagWarningSolidFontHover: themePrimitives.warning500,
    tagWarningLightBackground: themePrimitives.warning50,
    tagWarningLightHover: themePrimitives.warning100,
    tagWarningLightActive: themePrimitives.warning100,
    tagWarningLightDisabled: themePrimitives.warning50,
    tagWarningLightFont: themePrimitives.warning500,
    tagWarningLightFontHover: themePrimitives.warning500,
    tagWarningOutlinedActive: themePrimitives.warning600,
    tagWarningOutlinedFontHover: themePrimitives.warning600,
    tagWarningOutlinedHover: tagHoverBackground,
    // Negative
    tagNegativeFontDisabled: themePrimitives.negative200,
    tagNegativeOutlinedDisabled: themePrimitives.negative200,
    tagNegativeSolidFont: themePrimitives.white,
    tagNegativeSolidBackground: themePrimitives.negative400,
    tagNegativeOutlinedBackground: themePrimitives.negative200,
    tagNegativeOutlinedFont: themePrimitives.negative400,
    // Deprecated
    tagNegativeSolidHover: themePrimitives.negative50,
    tagNegativeSolidActive: themePrimitives.negative100,
    tagNegativeSolidDisabled: themePrimitives.negative50,
    tagNegativeSolidFontHover: themePrimitives.negative500,
    tagNegativeLightBackground: themePrimitives.negative50,
    tagNegativeLightHover: themePrimitives.negative100,
    tagNegativeLightActive: themePrimitives.negative100,
    tagNegativeLightDisabled: themePrimitives.negative50,
    tagNegativeLightFont: themePrimitives.negative500,
    tagNegativeLightFontHover: themePrimitives.negative500,
    tagNegativeOutlinedActive: themePrimitives.negative600,
    tagNegativeOutlinedFontHover: themePrimitives.negative400,
    tagNegativeOutlinedHover: tagHoverBackground,
    // Table
    tableHeadBackgroundColor: themePrimitives.mono100,
    tableBackground: themePrimitives.mono100,
    tableStripedBackground: themePrimitives.mono200,
    tableFilter: themePrimitives.mono600,
    tableFilterHeading: themePrimitives.mono700,
    tableFilterBackground: themePrimitives.mono100,
    tableFilterFooterBackground: themePrimitives.mono200,
    // Toast
    toastText: themePrimitives.white,
    toastPrimaryBackground: themePrimitives.primary400,
    toastPrimaryText: themePrimitives.white,
    toastInfoBackground: themePrimitives.accent400,
    toastInfoText: themePrimitives.white,
    toastPositiveBackground: themePrimitives.positive400,
    toastPositiveText: themePrimitives.white,
    toastWarningBackground: themePrimitives.warning400,
    toastWarningText: themePrimitives.black,
    toastNegativeBackground: themePrimitives.negative400,
    toastNegativeText: themePrimitives.white,
    // Spinner
    spinnerTrackFill: themePrimitives.mono900,
    // Progress bar
    progressbarTrackFill: themePrimitives.mono900,
    // Tooltip
    tooltipBackground: themePrimitives.mono900,
    tooltipText: themePrimitives.mono100
  };
};

// node_modules/baseui/esm/themes/light-theme/color-deprecated-semantic-tokens.js
var color_deprecated_semantic_tokens_default = function() {
  var themePrimitives = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : color_tokens_default;
  return {
    // TODO(#2318) Remove Legacy Semantic Colors values in the next v11 major
    // since it's not used in the component specific tokens
    // and we ship semantic tokens separately
    /* ---- Legacy Semantic Colors ---- */
    // Font Color
    colorPrimary: themePrimitives.black,
    colorSecondary: themePrimitives.mono800,
    // Background
    background: themePrimitives.white,
    backgroundAlt: themePrimitives.white,
    backgroundInv: themePrimitives.primary,
    // Foreground
    foreground: themePrimitives.black,
    foregroundAlt: themePrimitives.mono800,
    foregroundInv: themePrimitives.white,
    // Borders
    border: themePrimitives.mono500,
    borderAlt: themePrimitives.mono600,
    borderFocus: themePrimitives.primary,
    borderError: themePrimitives.negative,
    // Shadow
    shadowFocus: "rgba(39, 110, 241, 0.32)",
    shadowError: "rgba(229, 73, 55, 0.32)"
  };
};

// node_modules/baseui/esm/themes/shared/borders.js
var borders = {
  border100: {
    borderColor: "hsla(0, 0%, 0%, 0.04)",
    borderStyle: "solid",
    borderWidth: "1px"
  },
  border200: {
    borderColor: "hsla(0, 0%, 0%, 0.08)",
    borderStyle: "solid",
    borderWidth: "1px"
  },
  border300: {
    borderColor: "hsla(0, 0%, 0%, 0.12)",
    borderStyle: "solid",
    borderWidth: "1px"
  },
  border400: {
    borderColor: "hsla(0, 0%, 0%, 0.16)",
    borderStyle: "solid",
    borderWidth: "1px"
  },
  border500: {
    borderColor: "hsla(0, 0%, 0%, 0.2)",
    borderStyle: "solid",
    borderWidth: "1px"
  },
  border600: {
    borderColor: "hsla(0, 0%, 0%, 0.24)",
    borderStyle: "solid",
    borderWidth: "1px"
  },
  radius100: "2px",
  radius200: "4px",
  radius300: "8px",
  radius400: "12px",
  radius500: "16px",
  /** Datepicker (Range), Progress Bar, Slider, Tag */
  useRoundedCorners: true,
  /** Button, ButtonGroup */
  buttonBorderRadius: "0px",
  /** Input, Select, Textarea, Checkbox */
  inputBorderRadius: "0px",
  /** Popover, Menu, Tooltip */
  popoverBorderRadius: "0px",
  /** Card, Datepicker, Modal, Toast, Notification */
  surfaceBorderRadius: "0px",
  /** Tag */
  tagBorderRadius: "24px"
};
var borders_default = borders;

// node_modules/baseui/esm/themes/shared/lighting.js
var lighting = {
  shadow400: "0 1px 4px hsla(0, 0%, 0%, 0.16)",
  shadow500: "0 2px 8px hsla(0, 0%, 0%, 0.16)",
  shadow600: "0 4px 16px hsla(0, 0%, 0%, 0.16)",
  shadow700: "0 8px 24px hsla(0, 0%, 0%, 0.16)",
  overlay0: "inset 0 0 0 1000px hsla(0, 0%, 0%, 0)",
  overlay100: "inset 0 0 0 1000px hsla(0, 0%, 0%, 0.04)",
  overlay200: "inset 0 0 0 1000px hsla(0, 0%, 0%, 0.08)",
  overlay300: "inset 0 0 0 1000px hsla(0, 0%, 0%, 0.12)",
  overlay400: "inset 0 0 0 1000px hsla(0, 0%, 0%, 0.16)",
  overlay500: "inset 0 0 0 1000px hsla(0, 0%, 0%, 0.2)",
  overlay600: "inset 0 0 0 1000px hsla(0, 0%, 0%, 0.24)",
  shallowAbove: "0px -4px 16px rgba(0, 0, 0, 0.12)",
  shallowBelow: "0px 4px 16px rgba(0, 0, 0, 0.12)",
  deepAbove: "0px -16px 48px rgba(0, 0, 0, 0.22)",
  deepBelow: "0px 16px 48px rgba(0, 0, 0, 0.22)"
};
var lighting_default = lighting;

// node_modules/baseui/esm/themes/shared/typography.js
function ownKeys3(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread3(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys3(Object(source), true).forEach(function(key) {
        _defineProperty3(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys3(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty3(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
var defaultFontTokens = {
  primaryFontFamily: 'system-ui, "Helvetica Neue", Helvetica, Arial, sans-serif'
};
var monoFontFamily = '"Lucida Console", Monaco, monospace';
var typography_default = function() {
  var fontTokens2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : defaultFontTokens;
  var font100 = {
    fontFamily: fontTokens2.primaryFontFamily,
    fontSize: "12px",
    fontWeight: "normal",
    lineHeight: "20px"
  };
  var font150 = {
    fontFamily: fontTokens2.primaryFontFamily,
    fontSize: "12px",
    fontWeight: 500,
    lineHeight: "16px"
  };
  var font200 = {
    fontFamily: fontTokens2.primaryFontFamily,
    fontSize: "14px",
    fontWeight: "normal",
    lineHeight: "20px"
  };
  var font250 = {
    fontFamily: fontTokens2.primaryFontFamily,
    fontSize: "14px",
    fontWeight: 500,
    lineHeight: "16px"
  };
  var font300 = {
    fontFamily: fontTokens2.primaryFontFamily,
    fontSize: "16px",
    fontWeight: "normal",
    lineHeight: "24px"
  };
  var font350 = {
    fontFamily: fontTokens2.primaryFontFamily,
    fontSize: "16px",
    fontWeight: 500,
    lineHeight: "20px"
  };
  var font400 = {
    fontFamily: fontTokens2.primaryFontFamily,
    fontSize: "18px",
    fontWeight: "normal",
    lineHeight: "28px"
  };
  var font450 = {
    fontFamily: fontTokens2.primaryFontFamily,
    fontSize: "18px",
    fontWeight: 500,
    lineHeight: "24px"
  };
  var font550 = {
    fontFamily: fontTokens2.primaryFontFamily,
    fontSize: "20px",
    fontWeight: 500,
    lineHeight: "28px"
  };
  var font650 = {
    fontFamily: fontTokens2.primaryFontFamily,
    fontSize: "24px",
    fontWeight: 500,
    lineHeight: "32px"
  };
  var font750 = {
    fontFamily: fontTokens2.primaryFontFamily,
    fontSize: "28px",
    fontWeight: 500,
    lineHeight: "36px"
  };
  var font850 = {
    fontFamily: fontTokens2.primaryFontFamily,
    fontSize: "32px",
    fontWeight: 500,
    lineHeight: "40px"
  };
  var font950 = {
    fontFamily: fontTokens2.primaryFontFamily,
    fontSize: "36px",
    fontWeight: 500,
    lineHeight: "44px"
  };
  var font1050 = {
    fontFamily: fontTokens2.primaryFontFamily,
    fontSize: "40px",
    fontWeight: 500,
    lineHeight: "52px"
  };
  var font1150 = {
    fontFamily: fontTokens2.primaryFontFamily,
    fontSize: "36px",
    fontWeight: 500,
    lineHeight: "44px"
  };
  var font1250 = {
    fontFamily: fontTokens2.primaryFontFamily,
    fontSize: "44px",
    fontWeight: 500,
    lineHeight: "52px"
  };
  var font1350 = {
    fontFamily: fontTokens2.primaryFontFamily,
    fontSize: "52px",
    fontWeight: 500,
    lineHeight: "64px"
  };
  var font1450 = {
    fontFamily: fontTokens2.primaryFontFamily,
    fontSize: "96px",
    fontWeight: 500,
    lineHeight: "112px"
  };
  return {
    font100,
    font150,
    font200,
    font250,
    font300,
    font350,
    font400,
    font450,
    font550,
    font650,
    font750,
    font850,
    font950,
    font1050,
    font1150,
    font1250,
    font1350,
    font1450,
    ParagraphXSmall: font100,
    ParagraphSmall: font200,
    ParagraphMedium: font300,
    ParagraphLarge: font400,
    LabelXSmall: font150,
    LabelSmall: font250,
    LabelMedium: font350,
    LabelLarge: font450,
    HeadingXSmall: font550,
    HeadingSmall: font650,
    HeadingMedium: font750,
    HeadingLarge: font850,
    HeadingXLarge: font950,
    HeadingXXLarge: font1050,
    DisplayXSmall: font1150,
    DisplaySmall: font1250,
    DisplayMedium: font1350,
    DisplayLarge: font1450,
    MonoParagraphXSmall: _objectSpread3(_objectSpread3({}, font100), {}, {
      fontFamily: monoFontFamily
    }),
    MonoParagraphSmall: _objectSpread3(_objectSpread3({}, font200), {}, {
      fontFamily: monoFontFamily
    }),
    MonoParagraphMedium: _objectSpread3(_objectSpread3({}, font300), {}, {
      fontFamily: monoFontFamily
    }),
    MonoParagraphLarge: _objectSpread3(_objectSpread3({}, font400), {}, {
      fontFamily: monoFontFamily
    }),
    MonoLabelXSmall: _objectSpread3(_objectSpread3({}, font150), {}, {
      fontFamily: monoFontFamily
    }),
    MonoLabelSmall: _objectSpread3(_objectSpread3({}, font250), {}, {
      fontFamily: monoFontFamily
    }),
    MonoLabelMedium: _objectSpread3(_objectSpread3({}, font350), {}, {
      fontFamily: monoFontFamily
    }),
    MonoLabelLarge: _objectSpread3(_objectSpread3({}, font450), {}, {
      fontFamily: monoFontFamily
    }),
    MonoHeadingXSmall: _objectSpread3(_objectSpread3({}, font550), {}, {
      fontFamily: monoFontFamily
    }),
    MonoHeadingSmall: _objectSpread3(_objectSpread3({}, font650), {}, {
      fontFamily: monoFontFamily
    }),
    MonoHeadingMedium: _objectSpread3(_objectSpread3({}, font750), {}, {
      fontFamily: monoFontFamily
    }),
    MonoHeadingLarge: _objectSpread3(_objectSpread3({}, font850), {}, {
      fontFamily: monoFontFamily
    }),
    MonoHeadingXLarge: _objectSpread3(_objectSpread3({}, font950), {}, {
      fontFamily: monoFontFamily
    }),
    MonoHeadingXXLarge: _objectSpread3(_objectSpread3({}, font1050), {}, {
      fontFamily: monoFontFamily
    }),
    MonoDisplayXSmall: _objectSpread3(_objectSpread3({}, font1150), {}, {
      fontFamily: monoFontFamily
    }),
    MonoDisplaySmall: _objectSpread3(_objectSpread3({}, font1250), {}, {
      fontFamily: monoFontFamily
    }),
    MonoDisplayMedium: _objectSpread3(_objectSpread3({}, font1350), {}, {
      fontFamily: monoFontFamily
    }),
    MonoDisplayLarge: _objectSpread3(_objectSpread3({}, font1450), {}, {
      fontFamily: monoFontFamily
    })
  };
};

// node_modules/baseui/esm/themes/shared/animation.js
var animation = {
  timing100: "100ms",
  timing200: "200ms",
  timing300: "300ms",
  timing400: "400ms",
  timing500: "500ms",
  timing600: "600ms",
  timing700: "700ms",
  timing800: "800ms",
  timing900: "900ms",
  timing1000: "1000ms",
  easeInCurve: "cubic-bezier(.8, .2, .6, 1)",
  easeOutCurve: "cubic-bezier(.2, .8, .4, 1)",
  easeInOutCurve: "cubic-bezier(0.4, 0, 0.2, 1)",
  easeInQuinticCurve: "cubic-bezier(0.755, 0.05, 0.855, 0.06)",
  easeOutQuinticCurve: "cubic-bezier(0.23, 1, 0.32, 1)",
  easeInOutQuinticCurve: "cubic-bezier(0.86, 0, 0.07, 1)",
  linearCurve: "cubic-bezier(0, 0, 1, 1)"
};
var animation_default = animation;

// node_modules/baseui/esm/themes/shared/breakpoints.js
var breakpoints = {
  small: 320,
  medium: 600,
  large: 1136
};
var breakpoints_default = breakpoints;

// node_modules/baseui/esm/themes/shared/grid.js
var grid = {
  columns: [4, 8, 12],
  gutters: [16, 36, 36],
  margins: [16, 36, 64],
  gaps: 0,
  unit: "px",
  maxWidth: 1280
};
var grid_default = grid;

// node_modules/baseui/esm/helpers/responsive-helpers.js
var getMediaQuery = function getMediaQuery2(breakpoint) {
  return "@media screen and (min-width: ".concat(breakpoint, "px)");
};

// node_modules/baseui/esm/themes/shared/media-query.js
var mediaQuery = {
  small: getMediaQuery(breakpoints_default.small),
  medium: getMediaQuery(breakpoints_default.medium),
  large: getMediaQuery(breakpoints_default.large)
};
var media_query_default = mediaQuery;

// node_modules/baseui/esm/themes/shared/sizing.js
var sizing = {
  scale0: "2px",
  scale100: "4px",
  scale200: "6px",
  scale300: "8px",
  scale400: "10px",
  scale500: "12px",
  scale550: "14px",
  scale600: "16px",
  scale650: "18px",
  scale700: "20px",
  scale750: "22px",
  scale800: "24px",
  scale850: "28px",
  scale900: "32px",
  scale950: "36px",
  scale1000: "40px",
  scale1200: "48px",
  scale1400: "56px",
  scale1600: "64px",
  scale2400: "96px",
  scale3200: "128px",
  scale4800: "192px"
};
var sizing_default = sizing;

// node_modules/baseui/esm/themes/light-theme/light-theme.js
function ownKeys4(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread4(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys4(Object(source), true).forEach(function(key) {
        _defineProperty4(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys4(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty4(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
var LightTheme = {
  name: "light-theme",
  colors: _objectSpread4(_objectSpread4(_objectSpread4(_objectSpread4({}, color_tokens_default), color_component_tokens_default()), color_deprecated_semantic_tokens_default()), color_semantic_tokens_default()),
  animation: animation_default,
  breakpoints: breakpoints_default,
  borders: borders_default,
  direction: "auto",
  grid: grid_default,
  lighting: lighting_default,
  mediaQuery: media_query_default,
  sizing: sizing_default,
  typography: typography_default(),
  // TODO(#2318) Remove it in the next v11 major version.
  // Do not use.
  zIndex: {
    modal: 2e3
  }
};

// node_modules/baseui/esm/themes/move-theme/typography.js
var fontTokens = {
  primaryFontFamily: 'UberMoveText, system-ui, "Helvetica Neue", Helvetica, Arial, sans-serif'
};
var secondaryFontFamily = 'UberMove, UberMoveText, system-ui, "Helvetica Neue", Helvetica, Arial, sans-serif';
var monoFontFamily2 = 'UberMoveMono, "Lucida Console", Monaco, monospace';
var typography = {
  font1450: {
    fontFamily: secondaryFontFamily
  },
  font1350: {
    fontFamily: secondaryFontFamily
  },
  font1250: {
    fontFamily: secondaryFontFamily
  },
  font1150: {
    fontFamily: secondaryFontFamily
  },
  DisplayLarge: {
    fontFamily: secondaryFontFamily
  },
  DisplayMedium: {
    fontFamily: secondaryFontFamily
  },
  DisplaySmall: {
    fontFamily: secondaryFontFamily
  },
  DisplayXSmall: {
    fontFamily: secondaryFontFamily
  },
  MonoParagraphXSmall: {
    fontFamily: monoFontFamily2
  },
  MonoParagraphSmall: {
    fontFamily: monoFontFamily2
  },
  MonoParagraphMedium: {
    fontFamily: monoFontFamily2
  },
  MonoParagraphLarge: {
    fontFamily: monoFontFamily2
  },
  MonoLabelXSmall: {
    fontFamily: monoFontFamily2
  },
  MonoLabelSmall: {
    fontFamily: monoFontFamily2
  },
  MonoLabelMedium: {
    fontFamily: monoFontFamily2
  },
  MonoLabelLarge: {
    fontFamily: monoFontFamily2
  },
  MonoHeadingXSmall: {
    fontFamily: monoFontFamily2
  },
  MonoHeadingSmall: {
    fontFamily: monoFontFamily2
  },
  MonoHeadingMedium: {
    fontFamily: monoFontFamily2
  },
  MonoHeadingLarge: {
    fontFamily: monoFontFamily2
  },
  MonoHeadingXLarge: {
    fontFamily: monoFontFamily2
  },
  MonoHeadingXXLarge: {
    fontFamily: monoFontFamily2
  },
  MonoDisplayXSmall: {
    fontFamily: monoFontFamily2
  },
  MonoDisplaySmall: {
    fontFamily: monoFontFamily2
  },
  MonoDisplayMedium: {
    fontFamily: monoFontFamily2
  },
  MonoDisplayLarge: {
    fontFamily: monoFontFamily2
  }
};

// node_modules/baseui/esm/themes/move-theme/light-theme-with-move.js
var LightThemeMove = deepMerge({}, LightTheme, {
  name: "light-theme-with-move",
  // For the move theme we need to override typography values
  // in the default lightTheme with a font values that reference
  // our custom font family. In addition to it we want to replace some
  // of the fonts with an additional secondary font that specified
  // in `moveTypography`. For it we'll get the typography value built
  // with a custom font using `getTypography` helper and extend the result
  // value with the customized set of fonts that reference a secondary font
  typography: deepMerge(typography_default(fontTokens), typography)
});

// node_modules/baseui/esm/themes/dark-theme/color-tokens.js
var darkColorTokens = {
  // Primary Palette
  primaryA: colors_default.gray200,
  primaryB: colors_default.gray900,
  primary: colors_default.white,
  primary50: colors_default.gray50,
  primary100: colors_default.gray100,
  primary200: colors_default.gray200,
  primary300: colors_default.gray300,
  primary400: colors_default.gray400,
  primary500: colors_default.gray500,
  primary600: colors_default.gray600,
  primary700: colors_default.gray700,
  // Accent Palette
  accent: colors_default.blue400,
  accent50: colors_default.blue50,
  accent100: colors_default.blue100,
  accent200: colors_default.blue200,
  accent300: colors_default.blue300,
  accent400: colors_default.blue400,
  accent500: colors_default.blue500,
  accent600: colors_default.blue600,
  accent700: colors_default.blue700,
  // Negative Palette
  negative: colors_default.red500,
  negative50: colors_default.red50,
  negative100: colors_default.red100,
  negative200: colors_default.red200,
  negative300: colors_default.red300,
  negative400: colors_default.red400,
  negative500: colors_default.red500,
  negative600: colors_default.red600,
  negative700: colors_default.red700,
  // Warning Palette
  warning: colors_default.yellow500,
  warning50: colors_default.yellow50,
  warning100: colors_default.yellow100,
  warning200: colors_default.yellow200,
  warning300: colors_default.yellow300,
  warning400: colors_default.yellow400,
  warning500: colors_default.yellow500,
  warning600: colors_default.yellow600,
  warning700: colors_default.yellow700,
  // Positive Palette
  positive: colors_default.green400,
  positive50: colors_default.green50,
  positive100: colors_default.green100,
  positive200: colors_default.green200,
  positive300: colors_default.green300,
  positive400: colors_default.green400,
  positive500: colors_default.green500,
  positive600: colors_default.green600,
  positive700: colors_default.green700,
  // Monochrome Palette
  white: colors_default.white,
  black: colors_default.black,
  mono100: colors_default.gray300,
  mono200: colors_default.gray400,
  mono300: colors_default.gray500,
  mono400: colors_default.gray600,
  mono500: colors_default.gray700,
  // mono600 and mono900 are not in official brand tokens atm
  mono600: "#292929",
  mono700: "#1F1F1F",
  mono800: "#141414",
  mono900: "#111111",
  mono1000: colors_default.black,
  // Rating Palette,
  rating200: colors_default.yellow200,
  rating400: colors_default.yellow400,
  ratingInactiveFill: colors_default.gray500,
  ratingStroke: colors_default.gray700
};
var color_tokens_default2 = darkColorTokens;

// node_modules/baseui/esm/themes/dark-theme/color-semantic-tokens.js
function ownKeys5(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread5(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys5(Object(source), true).forEach(function(key) {
        _defineProperty5(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys5(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty5(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
var color_semantic_tokens_default2 = function() {
  var foundation = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : color_tokens_default2;
  var core = {
    // Background
    backgroundPrimary: foundation.primaryB,
    backgroundSecondary: colors_default.gray800,
    backgroundTertiary: colors_default.gray700,
    backgroundInversePrimary: foundation.primaryA,
    backgroundInverseSecondary: colors_default.gray300,
    // Content
    contentPrimary: colors_default.white,
    contentSecondary: colors_default.gray300,
    contentTertiary: colors_default.gray400,
    contentInversePrimary: colors_default.black,
    contentInverseSecondary: colors_default.gray700,
    contentInverseTertiary: colors_default.gray600,
    // Border
    borderOpaque: colors_default.gray700,
    borderTransparent: hexToRgb(foundation.primaryA, "0.08"),
    borderSelected: foundation.primaryA,
    borderInverseOpaque: colors_default.gray400,
    borderInverseTransparent: hexToRgb(foundation.primaryB, "0.2"),
    borderInverseSelected: foundation.primaryB
  };
  var coreExtensions = {
    // Backgrounds
    backgroundStateDisabled: colors_default.gray800,
    backgroundOverlayDark: hexToRgb(colors_default.black, "0.3"),
    backgroundOverlayLight: hexToRgb(colors_default.black, "0.08"),
    backgroundAccent: foundation.accent,
    backgroundNegative: foundation.negative,
    backgroundWarning: foundation.warning,
    backgroundPositive: colors_default.green500,
    backgroundLightAccent: colors_default.blue700,
    backgroundLightPositive: colors_default.green700,
    backgroundLightNegative: colors_default.red700,
    backgroundLightWarning: colors_default.yellow700,
    backgroundAlwaysDark: colors_default.gray900,
    backgroundAlwaysLight: colors_default.gray100,
    // Content
    contentStateDisabled: colors_default.gray600,
    contentAccent: colors_default.blue300,
    contentOnColor: colors_default.white,
    contentOnColorInverse: colors_default.black,
    contentNegative: colors_default.red300,
    contentWarning: colors_default.yellow300,
    contentPositive: colors_default.green300,
    // Border
    borderStateDisabled: colors_default.gray800,
    borderAccent: colors_default.blue400,
    borderAccentLight: colors_default.blue500,
    borderNegative: colors_default.red500,
    borderWarning: colors_default.yellow500,
    borderPositive: colors_default.green500,
    // Programs
    safety: colors_default.blue400,
    eatsGreen400: colors_default.green400,
    freightBlue400: colors_default.cobalt400,
    jumpRed400: colors_default.red400,
    rewardsTier1: colors_default.blue400,
    rewardsTier2: colors_default.yellow400,
    rewardsTier3: colors_default.platinum400,
    rewardsTier4: colors_default.gray200,
    membership: colors_default.yellow600
  };
  return _objectSpread5(_objectSpread5({}, core), coreExtensions);
};

// node_modules/baseui/esm/themes/dark-theme/color-component-tokens.js
var tagHoverBackground2 = "rgba(255, 255, 255, 0.2)";
var color_component_tokens_default2 = function() {
  var themePrimitives = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : color_tokens_default2;
  return {
    // Buttons
    buttonPrimaryFill: themePrimitives.primary,
    buttonPrimaryText: themePrimitives.black,
    buttonPrimaryHover: themePrimitives.primary100,
    buttonPrimaryActive: themePrimitives.primary200,
    buttonPrimarySelectedText: themePrimitives.black,
    buttonPrimarySelectedFill: themePrimitives.primary200,
    buttonPrimarySpinnerForeground: themePrimitives.primary700,
    buttonPrimarySpinnerBackground: themePrimitives.primary300,
    buttonSecondaryFill: themePrimitives.primary700,
    buttonSecondaryText: themePrimitives.primary,
    buttonSecondaryHover: themePrimitives.primary600,
    buttonSecondaryActive: themePrimitives.primary500,
    buttonSecondarySelectedText: themePrimitives.primary,
    buttonSecondarySelectedFill: themePrimitives.primary500,
    buttonSecondarySpinnerForeground: themePrimitives.white,
    buttonSecondarySpinnerBackground: themePrimitives.primary400,
    buttonTertiaryFill: "transparent",
    buttonTertiaryText: themePrimitives.primary,
    buttonTertiaryHover: themePrimitives.primary700,
    buttonTertiaryActive: themePrimitives.primary600,
    buttonTertiarySelectedText: themePrimitives.primary,
    buttonTertiarySelectedFill: themePrimitives.primary600,
    buttonTertiaryDisabledActiveFill: themePrimitives.primary700,
    buttonTertiaryDisabledActiveText: themePrimitives.mono300,
    buttonTertiarySpinnerForeground: themePrimitives.primary50,
    buttonTertiarySpinnerBackground: themePrimitives.primary500,
    buttonMinimalFill: "transparent",
    buttonMinimalText: themePrimitives.primary,
    buttonMinimalHover: themePrimitives.primary700,
    buttonMinimalActive: themePrimitives.primary600,
    buttonMinimalSelectedText: themePrimitives.primary,
    buttonMinimalSelectedFill: themePrimitives.primary600,
    buttonMinimalSpinnerForeground: themePrimitives.primary50,
    buttonMinimalSpinnerBackground: themePrimitives.primary500,
    buttonDisabledFill: themePrimitives.mono600,
    buttonDisabledText: themePrimitives.mono300,
    buttonDisabledActiveFill: themePrimitives.mono200,
    buttonDisabledActiveText: themePrimitives.primary500,
    buttonDisabledSpinnerForeground: themePrimitives.mono200,
    buttonDisabledSpinnerBackground: themePrimitives.mono400,
    // Breadcrumbs
    breadcrumbsText: themePrimitives.mono100,
    breadcrumbsSeparatorFill: themePrimitives.mono200,
    // Datepicker
    datepickerBackground: themePrimitives.mono600,
    datepickerDayFont: themePrimitives.white,
    datepickerDayFontDisabled: themePrimitives.mono100,
    datepickerDayPseudoSelected: themePrimitives.mono500,
    datepickerDayPseudoHighlighted: themePrimitives.mono600,
    // Calendar
    calendarBackground: themePrimitives.mono800,
    calendarForeground: themePrimitives.white,
    calendarForegroundDisabled: themePrimitives.mono300,
    calendarHeaderBackground: themePrimitives.primary700,
    calendarHeaderForeground: themePrimitives.primary,
    calendarHeaderBackgroundActive: themePrimitives.primary600,
    calendarHeaderForegroundDisabled: themePrimitives.primary500,
    calendarDayBackgroundPseudoSelected: themePrimitives.primary700,
    calendarDayForegroundPseudoSelected: themePrimitives.primary,
    calendarDayBackgroundPseudoSelectedHighlighted: themePrimitives.primary600,
    calendarDayForegroundPseudoSelectedHighlighted: themePrimitives.primary,
    calendarDayBackgroundSelected: themePrimitives.primary,
    calendarDayForegroundSelected: themePrimitives.black,
    calendarDayBackgroundSelectedHighlighted: themePrimitives.primary100,
    calendarDayForegroundSelectedHighlighted: themePrimitives.black,
    // Combobox
    comboboxListItemFocus: themePrimitives.mono600,
    comboboxListItemHover: themePrimitives.mono500,
    // FileUploader
    fileUploaderBackgroundColor: themePrimitives.mono700,
    fileUploaderBackgroundColorActive: themePrimitives.mono600,
    fileUploaderBorderColorActive: themePrimitives.primary,
    fileUploaderBorderColorDefault: themePrimitives.mono500,
    fileUploaderMessageColor: themePrimitives.mono100,
    // Links
    linkText: themePrimitives.primary,
    linkVisited: themePrimitives.primary100,
    linkHover: themePrimitives.primary200,
    linkActive: themePrimitives.primary300,
    // List
    listHeaderFill: themePrimitives.mono600,
    listBodyFill: themePrimitives.mono800,
    listIconFill: themePrimitives.mono100,
    listBorder: themePrimitives.mono500,
    // ProgressSteps
    progressStepsCompletedText: themePrimitives.black,
    progressStepsCompletedFill: themePrimitives.primary,
    progressStepsActiveText: themePrimitives.black,
    progressStepsActiveFill: themePrimitives.primary,
    progressStepsIconActiveFill: themePrimitives.primary,
    // Modal
    modalCloseColor: themePrimitives.mono300,
    modalCloseColorHover: themePrimitives.mono400,
    modalCloseColorFocus: themePrimitives.mono400,
    // Notification
    notificationPrimaryBackground: themePrimitives.primary700,
    notificationPrimaryText: themePrimitives.primaryA,
    notificationInfoBackground: themePrimitives.accent700,
    notificationInfoText: themePrimitives.primaryA,
    notificationPositiveBackground: themePrimitives.positive700,
    notificationPositiveText: themePrimitives.primaryA,
    notificationWarningBackground: themePrimitives.warning700,
    notificationWarningText: themePrimitives.primaryA,
    notificationNegativeBackground: themePrimitives.negative700,
    notificationNegativeText: themePrimitives.primaryA,
    // Tag
    // Custom ramps
    tagFontDisabledRampUnit: "600",
    tagOutlinedDisabledRampUnit: "700",
    tagSolidFontRampUnit: "0",
    tagSolidRampUnit: "500",
    tagOutlinedFontRampUnit: "500",
    tagOutlinedRampUnit: "500",
    // Deprecated
    tagSolidHoverRampUnit: "500",
    tagSolidActiveRampUnit: "400",
    tagSolidDisabledRampUnit: "700",
    tagSolidFontHoverRampUnit: "100",
    tagLightRampUnit: "700",
    tagLightHoverRampUnit: "700",
    tagLightActiveRampUnit: "600",
    tagLightDisabledRampUnit: "700",
    tagLightFontRampUnit: "100",
    tagLightFontHoverRampUnit: "100",
    tagOutlinedActiveRampUnit: "300",
    tagOutlinedHoverRampUnit: "800",
    tagOutlinedFontHoverRampUnit: "100",
    // Neutral
    tagNeutralOutlinedFont: themePrimitives.mono100,
    tagNeutralOutlinedBackground: themePrimitives.mono200,
    tagNeutralSolidFont: themePrimitives.black,
    tagNeutralSolidBackground: themePrimitives.primary200,
    // not much we can do to get the correct gray here
    tagNeutralFontDisabled: themePrimitives.mono400,
    tagNeutralOutlinedDisabled: themePrimitives.mono500,
    // Deprecated
    tagNeutralSolidHover: themePrimitives.mono600,
    tagNeutralSolidActive: themePrimitives.mono500,
    tagNeutralSolidDisabled: themePrimitives.mono700,
    tagNeutralSolidFontHover: themePrimitives.mono200,
    tagNeutralLightBackground: themePrimitives.mono800,
    tagNeutralLightHover: themePrimitives.mono800,
    tagNeutralLightActive: themePrimitives.mono700,
    tagNeutralLightDisabled: themePrimitives.mono700,
    tagNeutralLightFont: themePrimitives.mono200,
    tagNeutralLightFontHover: themePrimitives.mono200,
    tagNeutralOutlinedActive: themePrimitives.mono400,
    tagNeutralOutlinedFontHover: themePrimitives.mono100,
    tagNeutralOutlinedHover: tagHoverBackground2,
    // Primary
    tagPrimaryOutlinedFont: themePrimitives.primary200,
    tagPrimaryOutlinedBackground: themePrimitives.primary400,
    tagPrimarySolidFont: themePrimitives.black,
    tagPrimarySolidBackground: themePrimitives.primary200,
    tagPrimaryFontDisabled: themePrimitives.primary600,
    tagPrimaryOutlinedDisabled: themePrimitives.primary700,
    // Deprecated
    tagPrimarySolidHover: themePrimitives.primary700,
    tagPrimarySolidActive: themePrimitives.primary400,
    tagPrimarySolidDisabled: themePrimitives.primary700,
    tagPrimarySolidFontHover: themePrimitives.primary100,
    tagPrimaryLightBackground: themePrimitives.primary700,
    tagPrimaryLightHover: themePrimitives.primary700,
    tagPrimaryLightActive: themePrimitives.primary600,
    tagPrimaryLightDisabled: themePrimitives.primary700,
    tagPrimaryLightFont: themePrimitives.primary100,
    tagPrimaryLightFontHover: themePrimitives.primary100,
    tagPrimaryOutlinedActive: themePrimitives.primary600,
    tagPrimaryOutlinedFontHover: themePrimitives.primary200,
    tagPrimaryOutlinedHover: tagHoverBackground2,
    // Accent
    tagAccentOutlinedFont: themePrimitives.accent200,
    tagAccentOutlinedBackground: themePrimitives.accent500,
    tagAccentSolidFont: themePrimitives.white,
    tagAccentSolidBackground: themePrimitives.accent500,
    tagAccentFontDisabled: themePrimitives.accent600,
    tagAccentOutlinedDisabled: themePrimitives.accent700,
    // Deprecated
    tagAccentSolidHover: themePrimitives.accent500,
    tagAccentSolidActive: themePrimitives.accent400,
    tagAccentSolidDisabled: themePrimitives.accent700,
    tagAccentSolidFontHover: themePrimitives.accent100,
    tagAccentLightBackground: themePrimitives.accent700,
    tagAccentLightHover: themePrimitives.accent700,
    tagAccentLightActive: themePrimitives.accent600,
    tagAccentLightDisabled: themePrimitives.accent700,
    tagAccentLightFont: themePrimitives.accent100,
    tagAccentLightFontHover: themePrimitives.accent100,
    tagAccentOutlinedActive: themePrimitives.accent300,
    tagAccentOutlinedFontHover: themePrimitives.accent200,
    tagAccentOutlinedHover: tagHoverBackground2,
    // Positive
    tagPositiveOutlinedFont: themePrimitives.positive300,
    tagPositiveOutlinedBackground: themePrimitives.positive500,
    tagPositiveSolidFont: themePrimitives.white,
    tagPositiveSolidBackground: themePrimitives.positive500,
    tagPositiveFontDisabled: themePrimitives.positive600,
    tagPositiveOutlinedDisabled: themePrimitives.positive700,
    // Deprecated
    tagPositiveSolidHover: themePrimitives.positive500,
    tagPositiveSolidActive: themePrimitives.positive400,
    tagPositiveSolidDisabled: themePrimitives.positive700,
    tagPositiveSolidFontHover: themePrimitives.positive100,
    tagPositiveLightBackground: themePrimitives.positive700,
    tagPositiveLightHover: themePrimitives.positive700,
    tagPositiveLightActive: themePrimitives.positive600,
    tagPositiveLightDisabled: themePrimitives.positive700,
    tagPositiveLightFont: themePrimitives.positive100,
    tagPositiveLightFontHover: themePrimitives.positive100,
    tagPositiveOutlinedActive: themePrimitives.positive300,
    tagPositiveOutlinedFontHover: themePrimitives.positive300,
    tagPositiveOutlinedHover: tagHoverBackground2,
    // Warning
    tagWarningOutlinedFont: themePrimitives.warning300,
    tagWarningOutlinedBackground: themePrimitives.warning500,
    tagWarningSolidFont: themePrimitives.black,
    tagWarningSolidBackground: themePrimitives.warning500,
    tagWarningFontDisabled: themePrimitives.warning600,
    tagWarningOutlinedDisabled: themePrimitives.warning700,
    // Deprecated
    tagWarningSolidHover: themePrimitives.warning500,
    tagWarningSolidActive: themePrimitives.warning400,
    tagWarningSolidDisabled: themePrimitives.warning700,
    tagWarningSolidFontHover: themePrimitives.warning100,
    tagWarningLightBackground: themePrimitives.warning700,
    tagWarningLightHover: themePrimitives.warning700,
    tagWarningLightActive: themePrimitives.warning600,
    tagWarningLightDisabled: themePrimitives.warning700,
    tagWarningLightFont: themePrimitives.warning100,
    tagWarningLightFontHover: themePrimitives.warning100,
    tagWarningOutlinedActive: themePrimitives.warning300,
    tagWarningOutlinedFontHover: themePrimitives.warning300,
    tagWarningOutlinedHover: tagHoverBackground2,
    // Negative
    tagNegativeOutlinedFont: themePrimitives.negative300,
    tagNegativeOutlinedBackground: themePrimitives.negative500,
    tagNegativeSolidFont: themePrimitives.white,
    tagNegativeSolidBackground: themePrimitives.negative500,
    tagNegativeFontDisabled: themePrimitives.negative600,
    tagNegativeOutlinedDisabled: themePrimitives.negative700,
    // Deprecated
    tagNegativeSolidHover: themePrimitives.negative500,
    tagNegativeSolidActive: themePrimitives.negative400,
    tagNegativeSolidDisabled: themePrimitives.negative700,
    tagNegativeSolidFontHover: themePrimitives.negative100,
    tagNegativeLightBackground: themePrimitives.negative700,
    tagNegativeLightHover: themePrimitives.negative700,
    tagNegativeLightActive: themePrimitives.negative600,
    tagNegativeLightDisabled: themePrimitives.negative700,
    tagNegativeLightFont: themePrimitives.negative100,
    tagNegativeLightFontHover: themePrimitives.negative100,
    tagNegativeOutlinedActive: themePrimitives.negative300,
    tagNegativeOutlinedFontHover: themePrimitives.negative300,
    tagNegativeOutlinedHover: tagHoverBackground2,
    // Table
    tableHeadBackgroundColor: themePrimitives.mono700,
    tableBackground: themePrimitives.mono800,
    tableStripedBackground: themePrimitives.mono700,
    tableFilter: themePrimitives.mono400,
    tableFilterHeading: themePrimitives.mono300,
    tableFilterBackground: themePrimitives.mono700,
    tableFilterFooterBackground: themePrimitives.mono800,
    // Toast
    toastText: themePrimitives.white,
    toastPrimaryBackground: themePrimitives.primary400,
    toastPrimaryText: themePrimitives.white,
    toastInfoBackground: themePrimitives.accent400,
    toastInfoText: themePrimitives.white,
    toastPositiveBackground: themePrimitives.positive400,
    toastPositiveText: themePrimitives.white,
    toastWarningBackground: themePrimitives.warning400,
    toastWarningText: themePrimitives.black,
    toastNegativeBackground: themePrimitives.negative400,
    toastNegativeText: themePrimitives.white,
    // Toggle
    toggleFill: themePrimitives.mono300,
    toggleFillChecked: themePrimitives.primary,
    toggleFillDisabled: themePrimitives.mono600,
    toggleTrackFill: themePrimitives.mono400,
    toggleTrackFillDisabled: themePrimitives.mono700,
    // Tick
    tickFill: themePrimitives.mono1000,
    tickFillHover: themePrimitives.mono700,
    tickFillActive: themePrimitives.mono600,
    tickFillSelected: themePrimitives.primary,
    tickFillSelectedHover: themePrimitives.primary50,
    tickFillSelectedHoverActive: themePrimitives.primary100,
    tickFillError: themePrimitives.negative700,
    tickFillErrorHover: themePrimitives.negative600,
    tickFillErrorHoverActive: themePrimitives.negative500,
    tickFillErrorSelected: themePrimitives.negative500,
    tickFillErrorSelectedHover: themePrimitives.negative600,
    tickFillErrorSelectedHoverActive: themePrimitives.negative700,
    tickFillDisabled: themePrimitives.mono500,
    tickBorder: themePrimitives.mono300,
    tickBorderError: themePrimitives.negative400,
    tickMarkFill: themePrimitives.black,
    tickMarkFillError: themePrimitives.white,
    tickMarkFillDisabled: themePrimitives.mono800,
    // Slider/Toggle
    sliderTrackFill: "transparent",
    sliderHandleFill: themePrimitives.primaryA,
    sliderHandleFillDisabled: themePrimitives.primary500,
    sliderHandleInnerFill: themePrimitives.primaryA,
    sliderHandleFillHover: themePrimitives.mono300,
    sliderHandleFillActive: themePrimitives.mono300,
    sliderHandleFillSelected: themePrimitives.primary500,
    sliderHandleFillSelectedHover: themePrimitives.primary600,
    sliderHandleFillSelectedActive: themePrimitives.primary700,
    sliderTrackFillHover: themePrimitives.mono500,
    sliderTrackFillActive: themePrimitives.mono400,
    sliderTrackFillSelected: themePrimitives.primary500,
    sliderTrackFillSelectedActive: themePrimitives.primary600,
    sliderTrackFillSelectedHover: themePrimitives.primary700,
    sliderTrackFillDisabled: themePrimitives.mono700,
    sliderHandleInnerFillDisabled: themePrimitives.mono500,
    sliderHandleInnerFillSelectedHover: themePrimitives.primary600,
    sliderHandleInnerFillSelectedActive: themePrimitives.primary700,
    sliderBorder: themePrimitives.white,
    sliderBorderHover: themePrimitives.white,
    sliderBorderDisabled: themePrimitives.mono400,
    // Input
    inputBorder: themePrimitives.mono600,
    inputFill: themePrimitives.mono600,
    inputFillActive: themePrimitives.mono500,
    inputFillError: themePrimitives.negative700,
    inputFillDisabled: themePrimitives.mono800,
    inputFillPositive: themePrimitives.positive700,
    inputTextDisabled: themePrimitives.mono500,
    inputBorderError: themePrimitives.negative400,
    inputBorderPositive: themePrimitives.positive400,
    inputEnhancerFill: themePrimitives.mono500,
    inputEnhancerFillDisabled: themePrimitives.mono700,
    inputEnhancerTextDisabled: themePrimitives.mono500,
    inputPlaceholder: themePrimitives.mono300,
    inputPlaceholderDisabled: themePrimitives.mono500,
    // Menu
    menuFill: themePrimitives.mono600,
    menuFillHover: themePrimitives.mono700,
    menuFontDefault: themePrimitives.mono300,
    menuFontDisabled: themePrimitives.mono400,
    menuFontHighlighted: themePrimitives.white,
    menuFontSelected: themePrimitives.white,
    // Pagination
    paginationTriangleDown: themePrimitives.mono100,
    // Header navigation
    headerNavigationFill: themePrimitives.mono700,
    // Tab
    tabBarFill: themePrimitives.mono1000,
    tabColor: themePrimitives.mono300,
    // Spinner
    spinnerTrackFill: themePrimitives.mono100,
    // Progress bar
    progressbarTrackFill: themePrimitives.mono100,
    // Tooltip
    tooltipBackground: themePrimitives.mono200,
    tooltipText: themePrimitives.mono1000
  };
};

// node_modules/baseui/esm/themes/dark-theme/color-deprecated-semantic-tokens.js
var color_deprecated_semantic_tokens_default2 = function() {
  var themePrimitives = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : color_tokens_default2;
  return {
    // TODO(#2318) Remove Legacy Semantic Colors values in the next v11 major
    // since it's not used in the component specific tokens
    // and we ship semantic tokens separately
    /* ---- Legacy Semantic Colors ---- */
    // Font Color
    colorPrimary: themePrimitives.mono100,
    colorSecondary: themePrimitives.mono200,
    // Background
    background: themePrimitives.mono1000,
    backgroundAlt: themePrimitives.mono700,
    backgroundInv: themePrimitives.mono100,
    // Foreground
    foreground: themePrimitives.mono100,
    foregroundAlt: themePrimitives.mono300,
    foregroundInv: themePrimitives.mono1000,
    // Borders
    border: themePrimitives.mono600,
    borderAlt: themePrimitives.mono700,
    borderFocus: themePrimitives.primary,
    borderError: themePrimitives.negative,
    // Shadow
    shadowFocus: "rgba(39, 110, 241, 0.32)",
    shadowError: "rgba(229, 73, 55, 0.32)"
  };
};

// node_modules/baseui/esm/themes/dark-theme/borders.js
var borders2 = deepMerge({}, borders_default, {
  border100: {
    borderColor: "hsla(0, 0%, 100%, 0.04)"
  },
  border200: {
    borderColor: "hsla(0, 0%, 100%, 0.08)"
  },
  border300: {
    borderColor: "hsla(0, 0%, 100%, 0.12)"
  },
  border400: {
    borderColor: "hsla(0, 0%, 100%, 0.16)"
  },
  border500: {
    borderColor: "hsla(0, 0%, 100%, 0.2)"
  },
  border600: {
    borderColor: "hsla(0, 0%, 100%, 0.24)"
  }
});
var borders_default2 = borders2;

// node_modules/baseui/esm/themes/dark-theme/dark-theme.js
function ownKeys6(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread6(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys6(Object(source), true).forEach(function(key) {
        _defineProperty6(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys6(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty6(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
var DarkTheme = {
  name: "dark-theme",
  colors: _objectSpread6(_objectSpread6(_objectSpread6(_objectSpread6({}, color_tokens_default2), color_component_tokens_default2()), color_deprecated_semantic_tokens_default2()), color_semantic_tokens_default2()),
  animation: animation_default,
  breakpoints: breakpoints_default,
  borders: borders_default2,
  direction: "auto",
  grid: grid_default,
  lighting: lighting_default,
  mediaQuery: media_query_default,
  sizing: sizing_default,
  typography: typography_default(),
  // TODO(#2318) Remove it in the next v11 major version.
  // Do not use.
  zIndex: {
    modal: 2e3
  }
};

// node_modules/baseui/esm/themes/move-theme/dark-theme-with-move.js
var DarkThemeMove = deepMerge({}, DarkTheme, {
  name: "dark-theme-with-move",
  // For the move theme we need to override typography values
  // in the default darkTheme with a font values that reference
  // our custom font family. In addition to it we want to replace some
  // of the fonts with an additional secondary font that specified
  // in `moveTypography`. For it we'll get the typography value built
  // with a custom font using `getTypography` helper and extend the result
  // value with the customized set of fonts that reference a secondary font
  typography: deepMerge(typography_default(fontTokens), typography)
});

// node_modules/baseui/esm/themes/dark-theme/create-dark-theme.js
function ownKeys7(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread7(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys7(Object(source), true).forEach(function(key) {
        _defineProperty7(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys7(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty7(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}
function createDarkTheme() {
  var primitives3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var overrides = arguments.length > 1 ? arguments[1] : void 0;
  var primaryFontFamily = primitives3.primaryFontFamily, customColorTokens = _objectWithoutProperties(primitives3, ["primaryFontFamily"]);
  var colorTokens = _objectSpread7(_objectSpread7({}, color_tokens_default2), customColorTokens);
  var theme = {
    animation: animation_default,
    borders: borders_default2,
    breakpoints: breakpoints_default,
    colors: _objectSpread7(_objectSpread7(_objectSpread7(_objectSpread7({}, colorTokens), color_component_tokens_default2(colorTokens)), color_deprecated_semantic_tokens_default2(colorTokens)), color_semantic_tokens_default2(colorTokens)),
    direction: "auto",
    grid: grid_default,
    lighting: lighting_default,
    mediaQuery: media_query_default,
    sizing: sizing_default,
    // If primaryFontFamily is not provided, we use our default font tokens
    typography: primaryFontFamily ? typography_default({
      primaryFontFamily
    }) : typography_default(),
    // TODO(#2318) Remove in v11, the next major version.
    // Do not use.
    zIndex: {
      modal: 2e3
    }
  };
  return deepMerge(theme, overrides);
}

// node_modules/baseui/esm/themes/light-theme/create-light-theme.js
function ownKeys8(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread8(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys8(Object(source), true).forEach(function(key) {
        _defineProperty8(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys8(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty8(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _objectWithoutProperties2(source, excluded) {
  if (source == null) return {};
  var target = _objectWithoutPropertiesLoose2(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose2(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}
function createLightTheme() {
  var primitives3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var overrides = arguments.length > 1 ? arguments[1] : void 0;
  var primaryFontFamily = primitives3.primaryFontFamily, customColorTokens = _objectWithoutProperties2(primitives3, ["primaryFontFamily"]);
  var colorTokens = _objectSpread8(_objectSpread8({}, color_tokens_default), customColorTokens);
  var theme = {
    animation: animation_default,
    borders: borders_default,
    breakpoints: breakpoints_default,
    colors: _objectSpread8(_objectSpread8(_objectSpread8(_objectSpread8({}, colorTokens), color_component_tokens_default(colorTokens)), color_deprecated_semantic_tokens_default(colorTokens)), color_semantic_tokens_default(colorTokens)),
    direction: "auto",
    grid: grid_default,
    lighting: lighting_default,
    mediaQuery: media_query_default,
    sizing: sizing_default,
    // If primaryFontFamily is not provided, we use our default font tokens
    typography: primaryFontFamily ? typography_default({
      primaryFontFamily
    }) : typography_default(),
    // TODO(#2318) Remove in v11, the next major version.
    // Do not use.
    zIndex: {
      modal: 2e3
    }
  };
  return deepMerge(theme, overrides);
}

// node_modules/baseui/esm/themes/dark-theme/primitives.js
function ownKeys9(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread9(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys9(Object(source), true).forEach(function(key) {
        _defineProperty9(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys9(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty9(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
var primitives = _objectSpread9(_objectSpread9({}, color_tokens_default2), defaultFontTokens);
var primitives_default = primitives;

// node_modules/baseui/esm/themes/light-theme/primitives.js
function ownKeys10(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread10(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys10(Object(source), true).forEach(function(key) {
        _defineProperty10(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys10(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty10(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
var primitives2 = _objectSpread10(_objectSpread10({}, color_tokens_default), defaultFontTokens);
var primitives_default2 = primitives2;

// node_modules/baseui/esm/styles/theme-provider.js
var React2 = __toESM(require_react());
var ThemeContext = React2.createContext(LightTheme);
var ThemeProvider = function ThemeProvider2(props) {
  var theme = props.theme, children = props.children;
  return React2.createElement(ThemeContext.Provider, {
    value: theme
  }, children);
};
var theme_provider_default = ThemeProvider;

// node_modules/baseui/esm/styles/styled.js
var React3 = __toESM(require_react());
function ownKeys11(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread11(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys11(Object(source), true).forEach(function(key) {
        _defineProperty11(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys11(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty11(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = void 0;
  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
function _extends2() {
  _extends2 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends2.apply(this, arguments);
}
var wrapper = function wrapper2(StyledComponent) {
  return React3.forwardRef(function(props, ref) {
    return React3.createElement(ThemeContext.Consumer, null, function(theme) {
      return React3.createElement(StyledComponent, _extends2({
        ref
      }, props, {
        $theme: theme
      }));
    });
  });
};
function createThemedStyled() {
  return createStyled({
    wrapper,
    getInitialStyle,
    driver
    // flowlint-next-line unclear-type:off
  });
}
var styled = createThemedStyled();
function createThemedWithStyle() {
  return withStyle;
}
var withStyle2 = createThemedWithStyle();
function createThemedUseStyletron() {
  return function() {
    var theme = React3.useContext(ThemeContext);
    var _styletronUseStyletro = useStyletron(), _styletronUseStyletro2 = _slicedToArray(_styletronUseStyletro, 1), css = _styletronUseStyletro2[0];
    return [css, theme];
  };
}
var useStyletron2 = createThemedUseStyletron();
function withWrapper2(StyledElement, wrapperFn) {
  return withWrapper(StyledElement, function(Styled) {
    return React3.forwardRef(function(props, ref) {
      return React3.createElement(ThemeContext.Consumer, null, function(theme) {
        return wrapperFn(Styled)(_objectSpread11(_objectSpread11({
          ref
        }, props), {}, {
          $theme: theme
        }));
      });
    });
  });
}

// node_modules/baseui/esm/styles/index.js
var ThemeConsumer = ThemeContext.Consumer;

// node_modules/baseui/esm/locale/index.js
var React4 = __toESM(require_react());
var import_just_extend = __toESM(require_just_extend());

// node_modules/baseui/esm/accordion/locale.js
var locale = {
  collapse: "Collapse",
  expand: "Expand"
};
var locale_default = locale;

// node_modules/baseui/esm/breadcrumbs/locale.js
var locale2 = {
  ariaLabel: "Breadcrumbs navigation"
};
var locale_default2 = locale2;

// node_modules/baseui/esm/datepicker/locale.js
var locale3 = {
  ariaLabel: "Select a date.",
  ariaLabelRange: "Select a date range.",
  ariaLabelCalendar: "Calendar.",
  ariaRoleDescriptionCalendarMonth: "Calendar month",
  previousMonth: "Previous month.",
  nextMonth: "Next month.",
  pastWeek: "Past Week",
  pastMonth: "Past Month",
  pastThreeMonths: "Past 3 Months",
  pastSixMonths: "Past 6 Months",
  pastYear: "Past Year",
  pastTwoYears: "Past 2 Years",
  screenReaderMessageInput: "Press the down arrow key to interact with the calendar and select a date. Press the escape button to close the calendar.",
  selectedDate: "Selected date is ${date}.",
  selectedDateRange: "Selected date range is from ${startDate} to ${endDate}.",
  selectSecondDatePrompt: "Select the second date.",
  quickSelectLabel: "Choose a date range",
  quickSelectAriaLabel: "Choose a date range",
  quickSelectPlaceholder: "None",
  timeSelectEndLabel: "End time",
  timeSelectStartLabel: "Start time",
  timePickerAriaLabel12Hour: "Select a time, 12-hour format.",
  timePickerAriaLabel24Hour: "Select a time, 24-hour format.",
  timezonePickerAriaLabel: "Select a timezone.",
  selectedStartDateLabel: "Selected start date.",
  selectedEndDateLabel: "Selected end date.",
  dateNotAvailableLabel: "Not available.",
  dateAvailableLabel: "It's available.",
  selectedLabel: "Selected.",
  chooseLabel: "Choose"
};
var locale_default3 = locale3;

// node_modules/baseui/esm/data-table/locale.js
var locale4 = {
  emptyState: "No rows match the filter criteria defined. Please remove one or more filters to view more data.",
  loadingState: "Loading rows.",
  searchAriaLabel: "Search by text",
  filterAdd: "Add Filter",
  filterExclude: "Exclude",
  filterApply: "Apply",
  filterExcludeRange: "Exclude range",
  filterExcludeValue: "Exclude value",
  filterAppliedTo: "filter applied to",
  optionsLabel: "Select column to filter by",
  optionsSearch: "Search for a column to filter by...",
  optionsEmpty: "No columns available.",
  categoricalFilterSelectAll: "Select All",
  categoricalFilterSelectClear: "Clear",
  categoricalFilterEmpty: "No categories found",
  datetimeFilterRange: "Range",
  datetimeFilterRangeDatetime: "Date, Time",
  datetimeFilterRangeDate: "Date",
  datetimeFilterRangeTime: "Time",
  datetimeFilterCategorical: "Categorical",
  datetimeFilterCategoricalWeekday: "Weekday",
  datetimeFilterCategoricalMonth: "Month",
  datetimeFilterCategoricalQuarter: "Quarter",
  datetimeFilterCategoricalHalf: "Half",
  datetimeFilterCategoricalFirstHalf: "H1",
  datetimeFilterCategoricalSecondHalf: "H2",
  datetimeFilterCategoricalYear: "Year",
  numericalFilterRange: "Range",
  numericalFilterSingleValue: "Single Value",
  booleanFilterTrue: "true",
  booleanFilterFalse: "false",
  booleanColumnTrueShort: "T",
  booleanColumnFalseShort: "F"
};
var locale_default4 = locale4;

// node_modules/baseui/esm/button-group/locale.js
var locale5 = {
  ariaLabel: "button group"
};
var locale_default5 = locale5;

// node_modules/baseui/esm/file-uploader/locale.js
var locale6 = {
  dropFilesToUpload: "Drop files here to upload...",
  or: "",
  browseFiles: "Browse files",
  retry: "Retry Upload",
  cancel: "Cancel"
};
var locale_default6 = locale6;

// node_modules/baseui/esm/menu/locale.js
var locale7 = {
  noResultsMsg: "No results",
  parentMenuItemAriaLabel: "You are currently at an item that opens a nested listbox. Press right arrow to enter that element and left arrow to return."
};
var locale_default7 = locale7;

// node_modules/baseui/esm/modal/locale.js
var locale8 = {
  close: "Close"
};
var locale_default8 = locale8;

// node_modules/baseui/esm/drawer/locale.js
var locale9 = {
  close: "Close"
};
var locale_default9 = locale9;

// node_modules/baseui/esm/pagination/locale.js
var locale10 = {
  prev: "Prev",
  next: "Next",
  preposition: "of"
};
var locale_default10 = locale10;

// node_modules/baseui/esm/select/locale.js
var locale11 = {
  // Remove noResultsMsg prop in the next major version
  noResultsMsg: "No results found",
  placeholder: "Select...",
  create: "Create"
};
var locale_default11 = locale11;

// node_modules/baseui/esm/toast/locale.js
var locale12 = {
  close: "Close"
};
var locale_default12 = locale12;

// node_modules/baseui/esm/locale/en_US.js
var en_US = {
  accordion: locale_default,
  breadcrumbs: locale_default2,
  datepicker: locale_default3,
  datatable: locale_default4,
  buttongroup: locale_default5,
  fileuploader: locale_default6,
  menu: locale_default7,
  modal: locale_default8,
  drawer: locale_default9,
  pagination: locale_default10,
  select: locale_default11,
  toast: locale_default12
};
var en_US_default = en_US;

// node_modules/baseui/esm/locale/index.js
var LocaleContext = React4.createContext(en_US_default);
var LocaleProvider = function LocaleProvider2(props) {
  var locale13 = props.locale, children = props.children;
  if (true) {
    if (locale13.datepicker && locale13.datepicker.timePickerAriaLabel) {
      console.warn("`timePickerAriaLabel` will be removed in v11 - please use timePickerAriaLabel12Hour and timePickerAriaLabel24Hour instead");
    }
  }
  return React4.createElement(LocaleContext.Provider, {
    value: (0, import_just_extend.default)({}, en_US_default, locale13)
  }, children);
};
var locale_default13 = LocaleProvider;

// node_modules/baseui/esm/utils/focusVisible.js
var initialized = false;
var hadKeyboardEvent = true;
var hadFocusVisibleRecently = false;
var inputTypesWhitelist = {
  text: true,
  search: true,
  url: true,
  tel: true,
  email: true,
  password: true,
  number: true,
  date: true,
  month: true,
  week: true,
  time: true,
  datetime: true,
  "datetime-local": true
};
function focusTriggersKeyboardModality(node) {
  var type = node.type, tagName = node.tagName;
  if (tagName === "INPUT" && inputTypesWhitelist[type] && !node.readOnly) {
    return true;
  }
  if (tagName === "TEXTAREA" && !node.readOnly) {
    return true;
  }
  if (node.isContentEditable) {
    return true;
  }
  return false;
}
function handleKeyDown(event) {
  if (event.metaKey || event.altKey || event.ctrlKey) {
    return;
  }
  hadKeyboardEvent = true;
}
function handlePointerDown() {
  hadKeyboardEvent = false;
}
function handleVisibilityChange() {
  if (this.visibilityState === "hidden") {
    if (hadFocusVisibleRecently) {
      hadKeyboardEvent = true;
    }
  }
}
function prepare(doc) {
  doc.addEventListener("keydown", handleKeyDown, true);
  doc.addEventListener("mousedown", handlePointerDown, true);
  doc.addEventListener("pointerdown", handlePointerDown, true);
  doc.addEventListener("touchstart", handlePointerDown, true);
  doc.addEventListener("visibilitychange", handleVisibilityChange, true);
}
function isFocusVisible(event) {
  try {
    return event.target.matches(":focus-visible");
  } catch (error) {
  }
  return hadKeyboardEvent || focusTriggersKeyboardModality(event.target);
}
function initFocusVisible(node) {
  if (!initialized && node != null) {
    initialized = true;
    prepare(node.ownerDocument);
  }
}
var forkFocus = function forkFocus2(rootProps, handler) {
  return function(e) {
    if (typeof rootProps.onFocus === "function") {
      rootProps.onFocus(e);
    }
    handler(e);
  };
};
var forkBlur = function forkBlur2(rootProps, handler) {
  return function(e) {
    if (typeof rootProps.onBlur === "function") {
      rootProps.onBlur(e);
    }
    handler(e);
  };
};

export {
  getOverrides,
  mergeOverrides,
  LightTheme,
  LightThemeMove,
  DarkTheme,
  DarkThemeMove,
  createDarkTheme,
  createLightTheme,
  primitives_default,
  primitives_default2,
  theme_provider_default,
  createThemedStyled,
  styled,
  createThemedWithStyle,
  withStyle2 as withStyle,
  createThemedUseStyletron,
  useStyletron2 as useStyletron,
  withWrapper2 as withWrapper,
  ThemeConsumer,
  LocaleContext,
  locale_default13 as locale_default,
  isFocusVisible,
  initFocusVisible,
  forkFocus,
  forkBlur
};
//# sourceMappingURL=chunk-V6RD6A4A.js.map

{
  "version": 3,
  "sources": ["../../styletron-react/dist-browser-esm/src/index.tsx", "../../styletron-standard/dist-browser-esm/src/index.ts", "../../styletron-react/dist-browser-esm/src/dev-tool.ts"],
  "sourcesContent": ["/* eslint-env browser */\n/* eslint-disable no-unused-vars, no-redeclare, no-shadow */\n\ndeclare var __DEV__: boolean;\n\ndeclare var __BROWSER__: boolean;\ndeclare global {\n  interface Window {\n    __STYLETRON_DEVTOOLS__: any;\n  }\n}\n\ndeclare var process: any;\n\nimport * as React from \"react\";\nimport {\n  driver,\n  getInitialStyle,\n  type StandardEngine,\n  type StyleObject,\n} from \"styletron-standard\";\n\nimport type {\n  Styletron,\n  StyletronComponent,\n  ReducerContainer,\n  AssignmentCommutativeReducerContainer,\n  NonAssignmentCommutativeReducerContainer,\n  StyledFn,\n  WithStyleFn,\n  WithTransformFn,\n  WithWrapperFn,\n  StyletronProps,\n} from \"./types\";\nimport {\n  addDebugMetadata,\n  setupDevtoolsExtension,\n  DebugEngine,\n} from \"./dev-tool\";\n\nexport {DebugEngine};\nexport type {StyleObject};\nexport type {StyletronProps};\nexport type {StyletronComponent};\n\nconst noopEngine = {\n  renderStyle: () => \"\",\n  renderKeyframes: () => \"\",\n  renderFontFace: () => \"\",\n};\n\nconst StyletronContext = React.createContext<StandardEngine>(noopEngine);\nconst HydrationContext = React.createContext(false);\nconst DebugEngineContext = React.createContext<\n  InstanceType<typeof DebugEngine> | undefined\n>(undefined);\n//todo: theme context removed\n\ntype DevProviderProps = {\n  children: React.ReactNode;\n  value: StandardEngine;\n  debugAfterHydration?: boolean;\n  debug?: any;\n};\n\nclass DevProvider extends React.Component<\n  DevProviderProps,\n  {\n    hydrating: boolean;\n  }\n> {\n  constructor(props: DevProviderProps) {\n    super(props);\n    this.state = {\n      hydrating: Boolean(props.debugAfterHydration),\n    };\n  }\n\n  componentDidMount() {\n    if (__BROWSER__) {\n      if (this.state.hydrating === true) {\n        this.setState({\n          hydrating: false,\n        });\n      }\n    }\n  }\n\n  render() {\n    return (\n      <StyletronContext.Provider value={this.props.value}>\n        <DebugEngineContext.Provider value={this.props.debug}>\n          <HydrationContext.Provider value={this.state.hydrating}>\n            {this.props.children}\n          </HydrationContext.Provider>\n        </DebugEngineContext.Provider>\n      </StyletronContext.Provider>\n    );\n  }\n}\n\nexport const Provider =\n  __BROWSER__ && __DEV__ ? DevProvider : StyletronContext.Provider;\n\nif (__BROWSER__ && __DEV__ && !window.__STYLETRON_DEVTOOLS__) {\n  setupDevtoolsExtension();\n}\n\ntype createStyledOpts = {\n  getInitialStyle: () => StyleObject;\n  driver: typeof driver;\n  wrapper: (fc: React.FC<any>) => React.ComponentType<any>;\n};\n\nfunction checkNoopEngine(engine: StandardEngine) {\n  // if no engine provided, we default to no-op, handy for tests\n  // however, print a warning in other envs\n  if (process.env.NODE_ENV !== \"test\") {\n    engine === noopEngine &&\n      // eslint-disable-next-line no-console\n      console.warn(\n        __DEV__\n          ? `\nStyletron has been switched to a no-op (test) mode.\n\nA Styletron styled component was rendered, but no Styletron engine instance was provided in React context.\n\nDid you forget to provide a Styletron engine instance to React context via using the Styletron provider component?\n\nNote: Providers and Consumers must come from the exact same React.createContext call to work.\nIf your app has multiple instances of the \"styletron-react\" package in your node_module tree,\nyour Provider may be coming from a different React.createContext call, which means the styled components\nwill not recieve the provided engine instance. This scenario can arise, for example, when using \"npm link\".\n`\n          : `Styletron Provider is not set up. Defaulting to no-op.`,\n      );\n  }\n}\n\nexport function useStyletron(): [(style: StyleObject) => string] {\n  const styletronEngine: StandardEngine = React.useContext(StyletronContext);\n  const debugEngine = React.useContext(DebugEngineContext);\n  const hydrating = React.useContext(HydrationContext);\n  checkNoopEngine(styletronEngine);\n\n  const debugClassName = React.useRef<string | undefined>(\"\");\n  const prevDebugClassNameDeps = React.useRef([]);\n\n  return [\n    function css(style: StyleObject) {\n      const className = driver(style, styletronEngine);\n      if (!(__BROWSER__ && __DEV__)) {\n        return className;\n      }\n      const {stack, message} = new Error(\"stacktrace source\");\n\n      const nextDeps = [debugEngine, hydrating];\n      if (\n        prevDebugClassNameDeps.current[0] !== nextDeps[0] ||\n        prevDebugClassNameDeps.current[1] !== nextDeps[1]\n      ) {\n        if (debugEngine && !hydrating) {\n          debugClassName.current = debugEngine.debug({\n            stackInfo: {stack, message},\n            stackIndex: 1,\n          });\n        }\n        prevDebugClassNameDeps.current = nextDeps;\n      }\n\n      if (debugClassName.current) {\n        return `${debugClassName.current} ${className}`;\n      }\n\n      return className;\n    },\n  ];\n}\n\nexport function createStyled({\n  getInitialStyle,\n  driver,\n  wrapper,\n}: createStyledOpts): StyledFn {\n  function styled(base: any, styleArg) {\n    if (__DEV__) {\n      if (base.__STYLETRON__) {\n        /* eslint-disable no-console */\n        console.warn(\n          \"It appears you are passing a styled component into `styled`.\",\n        );\n        console.warn(\n          \"For composition with existing styled components, use `withStyle` or `withTransform` instead.\",\n        );\n        /* eslint-enable no-console */\n      }\n    }\n\n    const baseStyletron: Styletron = {\n      reducers: [],\n      base: base,\n      driver,\n      getInitialStyle,\n      wrapper,\n    };\n\n    if (__BROWSER__ && __DEV__) {\n      addDebugMetadata(baseStyletron, 2);\n    }\n\n    return createStyledElementComponent(\n      autoComposeShallow(baseStyletron, styleArg),\n    );\n  }\n\n  return styled;\n}\n\nexport const styled: StyledFn = createStyled({\n  getInitialStyle,\n  driver,\n  wrapper: Component => Component,\n});\n\nexport const withTransform: WithTransformFn = (component, transformer) => {\n  const styletron = component.__STYLETRON__;\n\n  if (__BROWSER__ && __DEV__) {\n    addDebugMetadata(styletron, 2);\n  }\n\n  return createStyledElementComponent(composeDynamic(styletron, transformer));\n};\n\nexport const withStyleDeep: WithStyleFn = (component, styleArg) => {\n  // @ts-ignore\n  const styletron = component.__STYLETRON__;\n\n  if (__DEV__) {\n    if (!styletron) {\n      /* eslint-disable no-console */\n      console.warn(\n        \"The first parameter to `withStyle` must be a styled component (without extra wrappers).\",\n      );\n      /* eslint-enable no-console */\n    }\n  }\n\n  if (__BROWSER__ && __DEV__) {\n    addDebugMetadata(styletron, 2);\n    return createStyledElementComponent(\n      addExtension(autoComposeDeep(styletron, styleArg), component, styleArg),\n    );\n  } else {\n    return createStyledElementComponent(autoComposeDeep(styletron, styleArg));\n  }\n};\n\nexport const withStyle = withStyleDeep;\n\nexport const withWrapper: WithWrapperFn = (component, wrapper) => {\n  const styletron = component.__STYLETRON__;\n\n  if (__DEV__) {\n    if (!styletron) {\n      /* eslint-disable no-console */\n      console.warn(\n        \"The first parameter to `withWrapper` must be a styled component (without extra wrappers).\",\n      );\n      /* eslint-enable no-console */\n    }\n  }\n\n  const composed = {\n    getInitialStyle: styletron.getInitialStyle,\n    base: styletron.base,\n    driver: styletron.driver,\n    wrapper: wrapper,\n    reducers: styletron.reducers,\n  };\n\n  if (__BROWSER__ && __DEV__) {\n    addDebugMetadata(composed, 2);\n  }\n\n  return createStyledElementComponent(composed);\n};\n\nexport function autoComposeShallow<Props>(\n  styletron: Styletron,\n  styleArg: StyleObject | ((a: Props) => StyleObject),\n) {\n  if (typeof styleArg === \"function\") {\n    return dynamicComposeShallow(styletron, styleArg);\n  }\n\n  return staticComposeShallow(styletron, styleArg);\n}\n\nfunction addExtension(composed, component, styleArg) {\n  return {\n    ...composed,\n    ext: {\n      with: styleArg,\n      name: component.displayName,\n      base: component.__STYLETRON__.base,\n      getInitialStyle: component.__STYLETRON__.reducers.length\n        ? component.__STYLETRON__.reducers[0].reducer\n        : component.__STYLETRON__.getInitialStyle,\n    },\n  };\n}\n\nexport function autoComposeDeep<Props>(\n  styletron: Styletron,\n  styleArg: StyleObject | ((a: Props) => StyleObject),\n) {\n  if (typeof styleArg === \"function\") {\n    return dynamicComposeDeep(styletron, styleArg);\n  }\n\n  return staticComposeDeep(styletron, styleArg);\n}\n\nexport function staticComposeShallow(styletron: Styletron, style: StyleObject) {\n  return composeStatic(styletron, createShallowMergeReducer(style));\n}\n\nexport function staticComposeDeep(styletron: Styletron, style: StyleObject) {\n  return composeStatic(styletron, createDeepMergeReducer(style));\n}\n\nexport function dynamicComposeShallow<Props>(\n  styletron: Styletron,\n  styleFn: (a: Props) => StyleObject,\n) {\n  return composeDynamic<Props>(styletron, (style, props) =>\n    shallowMerge(style, styleFn(props)),\n  );\n}\n\nexport function dynamicComposeDeep<Props>(\n  styletron: Styletron,\n  styleFn: (a: Props) => StyleObject,\n) {\n  return composeDynamic<Props>(styletron, (style, props) =>\n    deepMerge(style, styleFn(props)),\n  );\n}\n\nexport function createShallowMergeReducer(\n  style: StyleObject,\n): AssignmentCommutativeReducerContainer {\n  return {\n    reducer: inputStyle => shallowMerge(inputStyle, style),\n    assignmentCommutative: true,\n    factory: createShallowMergeReducer,\n    style: style,\n  };\n}\n\nexport function createDeepMergeReducer(\n  style: StyleObject,\n): AssignmentCommutativeReducerContainer {\n  return {\n    reducer: inputStyle => deepMerge(inputStyle, style),\n    assignmentCommutative: true,\n    factory: createDeepMergeReducer,\n    style: style,\n  };\n}\n\nexport function composeStatic(\n  styletron: Styletron,\n  reducerContainer: AssignmentCommutativeReducerContainer,\n) {\n  if (styletron.reducers.length === 0) {\n    const style = reducerContainer.reducer(styletron.getInitialStyle());\n    const result: Styletron = {\n      reducers: styletron.reducers,\n      base: styletron.base,\n      driver: styletron.driver,\n      wrapper: styletron.wrapper,\n      getInitialStyle: () => style,\n    };\n    if (__BROWSER__ && __DEV__) {\n      result.debug = styletron.debug;\n    }\n    return result;\n  } else {\n    const last = styletron.reducers[0];\n\n    if (\n      last.assignmentCommutative === true &&\n      reducerContainer.assignmentCommutative === true\n    ) {\n      const composed = reducerContainer.reducer(last.style);\n\n      const result: Styletron = {\n        getInitialStyle: styletron.getInitialStyle,\n        base: styletron.base,\n        driver: styletron.driver,\n        wrapper: styletron.wrapper,\n        reducers: [last.factory(composed)].concat(\n          styletron.reducers.slice(1) as any,\n        ),\n      };\n\n      if (__BROWSER__ && __DEV__) {\n        result.debug = styletron.debug;\n      }\n\n      return result;\n    }\n\n    return composeDynamic(styletron, reducerContainer.reducer);\n  }\n}\n\nexport function composeDynamic<Props>(\n  styletron: Styletron,\n  reducer: (b: StyleObject, a: Props) => StyleObject,\n) {\n  const composed: Styletron = {\n    getInitialStyle: styletron.getInitialStyle,\n    base: styletron.base,\n    driver: styletron.driver,\n    wrapper: styletron.wrapper,\n    // @ts-ignore\n    reducers: [{assignmentCommutative: false, reducer}].concat(\n      styletron.reducers,\n    ),\n  };\n  if (__BROWSER__ && __DEV__) {\n    composed.debug = styletron.debug;\n  }\n  return composed;\n}\n\nexport function createStyledElementComponent(styletron: Styletron) {\n  const {reducers, base, driver, wrapper, getInitialStyle, ext} = styletron;\n\n  if (__BROWSER__ && __DEV__) {\n    var debugStackInfo, debugStackIndex;\n    if (styletron.debug) {\n      debugStackInfo = styletron.debug.stackInfo;\n      debugStackIndex = styletron.debug.stackIndex;\n    }\n  }\n\n  if (__BROWSER__ && __DEV__) {\n    var debugClassName;\n  }\n\n  const StyledElement = React.forwardRef<StyletronProps, any>((props, ref) => {\n    const styletron: StandardEngine = React.useContext(StyletronContext);\n    const debugEngine = React.useContext(DebugEngineContext);\n    const hydrating = React.useContext(HydrationContext);\n    checkNoopEngine(styletron);\n\n    const elementProps: any = omitPrefixedKeys(props);\n    let style = resolveStyle(getInitialStyle, reducers, props);\n\n    if (props.$style) {\n      if (typeof props.$style === \"function\") {\n        style = deepMerge(style, props.$style(props));\n      } else {\n        style = deepMerge(style, props.$style);\n      }\n    }\n\n    const styleClassString = driver(style, styletron);\n    const Element = props.$as ? props.$as : base;\n    elementProps.className = props.className\n      ? `${props.className} ${styleClassString}`\n      : styleClassString;\n\n    if (__BROWSER__ && __DEV__ && debugEngine && !hydrating) {\n      if (!debugClassName) {\n        debugClassName = debugEngine.debug({\n          stackInfo: debugStackInfo,\n          stackIndex: debugStackIndex,\n        });\n      }\n\n      const joined = `${debugClassName} ${elementProps.className}`;\n      elementProps.className = joined;\n    }\n\n    if (__BROWSER__ && __DEV__ && window.__STYLETRON_DEVTOOLS__) {\n      window.__STYLETRON_DEVTOOLS__.stylesMap.set(\n        elementProps.className,\n        style,\n      );\n      if (ext) {\n        window.__STYLETRON_DEVTOOLS__.extensionsMap.set(\n          elementProps.className,\n          {\n            base: ext.base,\n            displayName: ext.name,\n            initialStyles: ext.getInitialStyle({}, props),\n            styleOverrides:\n              typeof ext.with === \"function\" ? ext.with(props) : ext.with,\n          },\n        );\n      }\n    }\n\n    if (props.$ref) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        \"The prop `$ref` has been deprecated. Use `ref` instead. Refs are now forwarded with React.forwardRef.\",\n      );\n    }\n    return <Element {...elementProps} ref={ref || props.$ref} />;\n  });\n\n  const Wrapped = wrapper(StyledElement);\n  Wrapped.__STYLETRON__ = {\n    base,\n    reducers,\n    driver,\n    wrapper,\n    getInitialStyle,\n  };\n\n  if (__DEV__) {\n    let displayName;\n\n    if (typeof base === \"string\") {\n      displayName = base;\n    } else if (base.displayName) {\n      displayName = base.displayName;\n    } else if (base.name) {\n      displayName = base.name;\n    } else {\n      displayName = \"Unknown\";\n    }\n\n    Wrapped.displayName = `Styled(${displayName})`;\n  }\n\n  return Wrapped;\n}\n\n// Utility functions\n\nexport function resolveStyle(\n  getInitialStyle: (a: void) => StyleObject,\n  reducers: Array<ReducerContainer>,\n  props: any,\n): StyleObject {\n  let result = getInitialStyle();\n  let i = reducers.length;\n  while (i--) {\n    // Cast to allow passing unused props param in case of static reducer\n    const reducer = reducers[i].reducer as (\n      b: StyleObject,\n      a: any,\n    ) => StyleObject;\n    result = reducer(result, props);\n  }\n  return result;\n}\n\nfunction isObject(x: any) {\n  return typeof x === \"object\" && x !== null;\n}\n\nfunction omitPrefixedKeys(source) {\n  const result = {};\n\n  for (const key in source) {\n    if (key[0] !== \"$\") {\n      result[key] = source[key];\n    }\n  }\n\n  return result;\n}\n\nfunction deepMerge(a, b) {\n  const result = assign({}, a);\n\n  for (const key in b) {\n    const val = b[key];\n\n    if (isObject(val) && isObject(a[key])) {\n      result[key] = deepMerge(a[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  return result;\n}\n\nfunction shallowMerge(a, b) {\n  return assign(assign({}, a), b);\n}\n\nfunction assign(target, source) {\n  for (const key in source) {\n    target[key] = source[key];\n  }\n  return target;\n}\n", "import type {\n  Properties,\n  FontFace as FontFaceObject,\n  KeyframesObject,\n} from \"./style-types\";\n\nexport type {FontFaceObject, KeyframesObject};\n\nexport type StyleObject = Properties & {\n  [key in string]: Properties[keyof Properties] | StyleObject;\n};\n\nexport interface StandardEngine {\n  renderStyle(style: StyleObject): string;\n  renderKeyframes(keyframes: KeyframesObject): string;\n  renderFontFace(fontFace: FontFaceObject): string;\n}\n\nexport function driver(style: StyleObject, styletron: StandardEngine): string {\n  const tx = renderDeclarativeRules(style, styletron);\n  return styletron.renderStyle(tx);\n}\n\nexport function getInitialStyle(): StyleObject {\n  return {};\n}\n\nexport function renderDeclarativeRules(\n  style: StyleObject,\n  styletron: StandardEngine,\n) {\n  for (const key in style) {\n    const val = style[key];\n    if (key === \"animationName\" && typeof val !== \"string\") {\n      style.animationName = styletron.renderKeyframes(val as any);\n      continue;\n    }\n    if (key === \"fontFamily\" && typeof val !== \"string\") {\n      if (Array.isArray(val)) {\n        let result = \"\";\n        for (const font of val) {\n          if (typeof font === \"object\") {\n            result += `${styletron.renderFontFace(font as any)},`;\n          } else if (typeof font === \"string\") {\n            result += `${font},`;\n          }\n        }\n        style.fontFamily = result.slice(0, -1);\n        continue;\n      } else if (val === void 0) {\n        continue;\n      } else {\n        style.fontFamily = styletron.renderFontFace(val as any);\n        continue;\n      }\n    }\n    if (typeof val === \"object\" && val !== null) {\n      renderDeclarativeRules(val as StyleObject, styletron);\n    }\n  }\n  return style;\n}\n", "/* eslint-env browser */\n/* global module */\n\nexport function addDebugMetadata(instance, stackIndex) {\n  // @ts-expect-error todo: stacktrace does not exist on error (non standard browser?)\n  const {stack, stacktrace, message} = new Error(\"stacktrace source\");\n  instance.debug = {\n    stackInfo: {stack, stacktrace, message},\n    stackIndex: stackIndex,\n  };\n}\n\n// DEVTOOLS SETUP\ntype StyletronStyles = {\n  classes?: any;\n  styles?: any;\n  extends?: any;\n};\n\nexport const setupDevtoolsExtension = () => {\n  const atomicMap = {};\n  const extensionsMap = new Map();\n  const stylesMap = new Map();\n  const getStyles: (className: string) => StyletronStyles = className => {\n    const styles: StyletronStyles = {};\n    if (typeof className !== \"string\") {\n      return styles;\n    }\n    if (stylesMap.has(className)) {\n      styles.styles = stylesMap.get(className);\n      const classList = className.split(\" \");\n      if (classList.length) {\n        const classes = {};\n        classList.forEach(singleClassName => {\n          classes[singleClassName] = atomicMap[singleClassName];\n        });\n        styles.classes = classes;\n      }\n      if (extensionsMap.has(className)) {\n        const extension = extensionsMap.get(className);\n        styles.extends = extension;\n      }\n      return styles;\n    }\n  };\n  window.__STYLETRON_DEVTOOLS__ = {\n    atomicMap,\n    extensionsMap,\n    stylesMap,\n    getStyles,\n  };\n};\n\n// todo: export debug engine interface\nexport class BrowserDebugEngine {\n  private worker: any;\n  private counter: number;\n  constructor(worker?) {\n    if (!worker) {\n      const workerBlob = new Blob(\n        [\n          `importScripts(\"https://unpkg.com/css-to-js-sourcemap-worker@2.0.5/worker.js\")`,\n        ],\n        {type: \"application/javascript\"},\n      );\n      worker = new Worker(URL.createObjectURL(workerBlob));\n      worker.postMessage({\n        id: \"init_wasm\",\n        url: \"https://unpkg.com/css-to-js-sourcemap-worker@2.0.5/mappings.wasm\",\n      });\n      worker.postMessage({\n        id: \"set_render_interval\",\n        interval: 120,\n      });\n      if (module.hot) {\n        module.hot.addStatusHandler(status => {\n          if (status === \"dispose\") {\n            worker.postMessage({id: \"invalidate\"});\n          }\n        });\n      }\n    }\n    this.worker = worker;\n    this.counter = 0;\n    this.worker.onmessage = msg => {\n      const {id, css} = msg.data;\n      if (id === \"render_css\" && css) {\n        const style = document.createElement(\"style\");\n        style.appendChild(document.createTextNode(css));\n        document.head.appendChild(style);\n      }\n    };\n  }\n\n  debug({stackIndex, stackInfo}) {\n    const className = `__debug-${this.counter++}`;\n    this.worker.postMessage({\n      id: \"add_mapped_class\",\n      className,\n      stackInfo,\n      stackIndex,\n    });\n    return className;\n  }\n}\n\n// todo: export debug engine interface\nexport class NoopDebugEngine {\n  debug(): undefined {\n    return;\n  }\n}\n\ndeclare var __BROWSER__: boolean;\nexport const DebugEngine = __BROWSER__ ? BrowserDebugEngine : NoopDebugEngine;\n"],
  "mappings": "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",
  "names": ["driver", "style", "styletron", "tx", "renderDeclarativeRules", "renderStyle", "getInitialStyle", "key", "val", "animationName", "renderKeyframes", "Array", "isArray", "result", "font", "renderFontFace", "fontFamily", "slice", "addDebugMetadata", "instance", "stackIndex", "stack", "stacktrace", "message", "Error", "debug", "stackInfo", "setupDevtoolsExtension", "atomicMap", "extensionsMap", "Map", "stylesMap", "getStyles", "className", "styles", "has", "get", "classList", "split", "length", "classes", "forEach", "singleClassName", "extension", "extends", "window", "__STYLETRON_DEVTOOLS__", "BrowserDebugEngine", "constructor", "worker", "workerBlob", "Blob", "type", "Worker", "URL", "createObjectURL", "postMessage", "id", "url", "interval", "module", "hot", "addStatusHandler", "status", "counter", "onmessage", "msg", "css", "data", "style", "document", "createElement", "appendChild", "createTextNode", "head", "DebugEngine", "BrowserDebugEngine", "NoopDebugEngine", "noopEngine", "renderStyle", "renderKeyframes", "renderFontFace", "StyletronContext", "createContext", "HydrationContext", "DebugEngineContext", "undefined", "DevProvider", "Component", "constructor", "props", "state", "hydrating", "Boolean", "debugAfterHydration", "componentDidMount", "setState", "render", "value", "debug", "children", "Provider", "window", "__STYLETRON_DEVTOOLS__", "setupDevtoolsExtension", "checkNoopEngine", "engine", "process", "console", "warn", "useStyletron", "styletronEngine", "useContext", "debugEngine", "debugClassName", "useRef", "prevDebugClassNameDeps", "css", "style", "className", "driver", "stack", "message", "Error", "nextDeps", "current", "stackInfo", "stackIndex", "createStyled", "getInitialStyle", "wrapper", "styled", "base", "styleArg", "__STYLETRON__", "baseStyletron", "reducers", "addDebugMetadata", "createStyledElementComponent", "autoComposeShallow", "withTransform", "component", "transformer", "styletron", "composeDynamic", "withStyleDeep", "addExtension", "autoComposeDeep", "withStyle", "withWrapper", "composed", "dynamicComposeShallow", "staticComposeShallow", "ext", "with", "name", "displayName", "length", "reducer", "dynamicComposeDeep", "staticComposeDeep", "composeStatic", "createShallowMergeReducer", "createDeepMergeReducer", "styleFn", "shallowMerge", "deepMerge", "inputStyle", "assignmentCommutative", "factory", "reducerContainer", "result", "last", "concat", "slice", "debugStackInfo", "debugStackIndex", "StyledElement", "forwardRef", "ref", "elementProps", "omitPrefixedKeys", "resolveStyle", "$style", "styleClassString", "Element", "$as", "joined", "stylesMap", "set", "extensionsMap", "initialStyles", "styleOverrides", "$ref", "Wrapped", "i", "isObject", "x", "source", "key", "a", "b", "assign", "val", "target"]
}
